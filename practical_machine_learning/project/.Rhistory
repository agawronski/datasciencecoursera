install.packages(AppliedPredictiveModeling)
install.packages(AppliedPredictiveModeling)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
trainIndex = createDataPartition(diagnosis, p = 0.50)
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
class(predictors)
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50)
training = adData[trainIndex,]
adData = data.frame(diagnosis,predictors)
testIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
testIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)
training = adData[-testIndex,]
testing = adData[testIndex,]
install.packages("gcmr")
eventsData = "C:/Users/aidan/Desktop/ICX/data/1430290802events.dat"
eventsData = "C:/Users/aidan/Desktop/ICX/data/1431241201events.dat"
data(iris)
sum(iris)
sum(iris[1:4,])
sum(iris[,1:4])
summary(iris[,1:4])
Winback <- as.data.frame(sample(1000, 100, replace=FALSE))
winback <- as.data.frame(sample(1000, 100, replace=FALSE))
winback <- as.data.frame(sample(1000, 100, replace=FALSE))
winback
winback$contact_ID <- as.data.frame(sample(1000, 100, replace=FALSE))
head(winback)
winback$contact_ID <- as.data.frame(sample(1000, 100, replace=FALSE))
winback = NULL
winback$contact_ID <- as.data.frame(sample(1000, 100, replace=FALSE))
head(winback)
head(winback)
winback = NULL
winback$contact_ID <- sample(1000, 100, replace=FALSE)
winback = as.data.frame(NULL)
winback = as.data.frame(NULL)
winback$contact_ID <- sample(1000, 100, replace=FALSE)
winback <- sample(1000, 100, replace=FALSE)
head(winback)
class(winback)
winback <- as.data.frame(sample(1000, 100, replace=FALSE))
head(winback)
dimnames(winback)
dimnames[[2]]
dimnames[[2]]
dimnames[2]
dimnames(winback)
?dimnames
class(winback)
dimnames(winback) <- "contact_ID"
dimnames(winback) <- c("contact_ID")
dimnames(winback) <- c("contact_ID")
colnames(winback)
colnames(winback) <- c("contact_ID")
head(winback)
ordersDetail <- as.data.frame(sample(2000, 300, replace=FALSE))
head(ordersDetail)
colnames(winback) <- c("CONTACT_ID")
head(ordersDetail)
colnames(winback) <- c("CONTACT_ID")
head(ordersDetail)
colnames(ordersDetail) <- c("CONTACT_ID")
head(ordersDetail)
ordersDetail$Total <- sample(500, 300, replace=TRUE)
ordersDetail$ORDERNUMBER <- sample(300, 300, replace=FALSE)
head(ordersDetail)
?sort
ordersDetail <- ordersDetail[sort(ordersDetail$ORDERNUMBER),]
head(ordersDetail)
sort(ordersDetail$ORDERNUMBER)
?order
order(ordersDetail[,"ORDERNUMBER"])
ordersDetail <- ordersDetail[order(ordersDetail[,ORDERNUMBER]),]
ordersDetail <- ordersDetail[order(ordersDetail[,"ORDERNUMBER"]),]
head(ordersDetail)
ORDERDATE <- seq(as.Date("2015/1/5"), as.Date("2015/12/31"), by = "week")
dim(ORDERDATE)
length(ORDERDATE)
ORDERDATE <- seq(as.Date("2014/1/5"), as.Date("2015/12/31"), by = "week")
length(ORDERDATE)
ORDERDATE <- seq(as.Date("2011/1/5"), as.Date("2016/12/31"), by = "week")
length(ORDERDATE)
ORDERDATE <- seq(as.Date("2011/1/5"), as.Date("2016/9/31"), by = "week")
ORDERDATE <- seq(as.Date("2011/1/5"), as.Date("2016/9/28"), by = "week")
length(ORDERDATE)
ordersDetail$ORDERDATE <- seq(as.Date("2011/1/5"), as.Date("2016/9/28"), by = "week")
head(ordersDetail)
ordersDetail[ordersDetail$ORDERDATE=="2015/6/1",]
ordersDetail[ordersDetail$ORDERDATE=="2015/6/2",]
ordersDetail[ordersDetail$ORDERDATE=="2015/6/3",]
ordersDetail[ordersDetail$ORDERDATE=="2015/6/10",]
ordersDetail[ordersDetail$ORDERDATE=="2015/6/17",]
ordersDetail[ordersDetail$ORDERDATE=="2015/6/10",]
287703*.44
library(caret)
library(mlbench)
data(Sonar)
set.seed(107)
head(Sonar)
str(Sonar)
str(Sonar$Class)
head(Sonar$Class)
inTrain <- createDataPartition(y=Sonar$Class, p=0.75, list=FALSE)
str(inTrain)
head(inTrain)
training -> a
"training" -> a
a
training <- Sonar[inTrain,]
head(training)
dim(training)
testing <- Sonar[-inTrain,]
dim(testing)
plsFit <- train(Class ~ ., data=training, method="pls", preProc=c("center", "scale"))
plsFit
plsFit <- train(Class ~ ., data=training, method="pls", tuneLength=15, preProc=c("center", "scale"))
plsFit
str(plsFit)
?lag
x <- c(0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0)
diff(x)
?density
data(cars)
head(cars)
density(cars$speed)
plot(density(cars$speed))
plot(density(cars$speed), col="blue")
lines(density(cars$dist), col="red")
lm(dist ~ speed, data=cars)
lm(dist ~ speed + speed^2, data=cars)
cars$speed2 <- cars$speed^2
lm(dist ~ speed + speed2, data=cars)
data(BJsales)
head)BJsales
head(BJsales)
data(BJsales.lead)
data(BJsales.lead)
setwd("C:/Users/aidan/data_science/datasciencecoursera/practical_machine_learning/project")
data <- read.csv("pml-training.csv", stringsAsFactors=FALSE)
head(data)
str(data)
names(data)
head(data$classe)
unique(data$classe)
test <- read.csv("pml-testing.csv", stringsAsFactors=FALSE)
head(test)
length(names(data))
length(names(test))
head(test$classe)
head(data)
dim(test)
