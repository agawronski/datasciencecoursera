## ties settled by alphabetical hospital name
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
##  names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- c(odata[odata[,2]==state,c(1,3)], 1:n)
}
head(sodata)
}
rankhospital("NY","heart attack")
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
##  names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
}
head(sodata)
}
rankhospital("NY","heart attack")
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
##  names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
asodata <- sodata[order(sodata[,1]),]
}
head(sodata)
}
rankhospital("NY","heart attack")
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
##  names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
asodata <- sodata[order(sodata[,1]),]
rank <- c(asodata,1:length(asodata))
}
head(rank)
}
rankhospital("NY","heart attack")
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
##  names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
asodata <- sodata[order(sodata[,1]),]
rank <- c(asodata,1:length(asodata))
}
head(rank)
}
rankhospital("NY","heart attack")
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
##  names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
asodata <- sodata[order(sodata[,1]),]
rank <- c(asodata,1:length(asodata))
}
head(rank)
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
##  names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
asodata <- sodata[order(sodata[,1]),]
n <- length(asodata)
rank <- c(asodata,1:n)
}
head(rank)
}
head(rank)
head(asodata)
n <- length(asodata)
vec <- 1:n
length(vec)
}
n <- nrow(asodata)
rank <- c(asodata,1:n)
head(rank)
vec<-1:n
length(vec)
rank <- cbind(asodata,1:n)
head(rank)
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
##  names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
asodata <- sodata[order(sodata[,1]),]
n <- nrow(asodata)
rank <- cbind(asodata,1:n)
}
head(rank)
}
rankhospital("NY","heart attack")
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
asodata <- sodata[order(sodata[,1]),]
n <- nrow(asodata)
rank <- cbind(asodata,1:n)
}
head(rank)
head(data)
head(sodata)
head(asodata)
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
#order by alphabet
data <- data[order(data[,1]),]
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
n <- nrow(sodata)
rank <- cbind(sodata,1:n)
}
head(rank)
}
rankhospital("NY","heart attack")
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
#order by alphabet
data <- data[order(data[,1]),]
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
n <- nrow(sodata)
rank <- cbind(sodata,1:n)
match <- rank[rank[,3]==num,1]
}
match
}
rankhospital("NY","heart attack")
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
states <- data[,2]
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
#order by alphabet
data <- data[order(data[,1]),]
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
n <- nrow(sodata)
rank <- cbind(sodata,1:n)
match <- rank[rank[,3]==num,1]
}
head(rank)
rankhospital("NY","heart attack",3)
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
#order by alphabet
data <- data[order(data[,1]),]
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
n <- nrow(sodata)
rank <- cbind(sodata,1:n)
match <- rank[rank[,3]==num,1]
}
match
class(match)
}
rankhospital("NY","heart attack",3)
tail(sodata)
?na.omit
?rm.na
?na.rm
n <<- nrow(omit.na(sodata))
n <<- nrow(na.omit(sodata))
length(n)
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
#order by alphabet
data <- data[order(data[,1]),]
#define best and worst
best <- 1
worst <- n #define n using the superassignment operator la
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
n <<- nrow(na.omit(sodata))
rank <- cbind(sodata,1:n)
match <- rank[rank[,3]==num,1]
}
match
}
rankhospital("NY","heart attack",3)
dim(sodata)
head(sodata)
tail(sodata)
test<-na.omit(sodata)
dim(test)
head(test)
tail(test)
nrow(na.omit(sodata))
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
#order by alphabet
data <- data[order(data[,1]),]
#define best and worst
best <- 1
worst <- last #define n using the superassignment operator la
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
last <<- nrow(na.omit(sodata))
n <- nrow(sodata)
rank <- cbind(sodata,1:n)
match <- rank[rank[,3]==num,1]
}
match
}
rankhospital("NY","heart attack",3)
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
#order by alphabet
data <- data[order(data[,1]),]
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
last <<- nrow(na.omit(sodata))
n <- nrow(sodata)
rank <- cbind(sodata,1:n)
match <- rank[rank[,3]==num,1]
}
match
}
rankhospital("NY","heart attack",3)
head(data)
rankhospital <- function(state, outcome, num="best"){
##Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
data <- data[,c(2,7,11,17,23)]
data[,c(3,4,5)] <- sapply(data[,c(3,4,5)], as.numeric)
names(data) <- c("hospitals","states","heart attack","heart failure","pneumonia")
##check that state and outcome are valid
states <- data[,2]
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(state%in%states)){stop("invalid state")}
if(!(outcome%in%outcomes)) {stop("invalid outcome")}
#order by alphabet
data <- data[order(data[,1]),]
##return hospital name in that state with the given rank
##30-day mort rate
if(outcome=="heart attack"){
odata <- data[order(data[,3]),]
sodata <- odata[odata[,2]==state,c(1,3)]
n <- nrow(sodata)
rank <- cbind(sodata,1:n)
match <- rank[rank[,3]==num,1]
}
else if (outcome=="heart failure") {
odata <- data[order(data[,4]),]
sodata <- odata[odata[,2]==state,c(1,3)]
n <- nrow(sodata)
rank <- cbind(sodata,1:n)
match <- rank[rank[,3]==num,1]
}
else {
odata <- data[order(data[,5]),]
sodata <- odata[odata[,2]==state,c(1,3)]
n <- nrow(sodata)
rank <- cbind(sodata,1:n)
match <- rank[rank[,3]==num,1]
}
match
}
rankhospital("TX","heart failure",4)
rankhospital("MD","heart attack","worst")
rankhospital("MN","heart attack", 5000)
rankhospital("TX","heart failure", 1)
rankhospital("TX","heart failure", 2)
rankhospital("TX","heart failure", 3)
rankhospital("TX","heart failure", 4)
rankhospital("TX","heart failure", "best")
cube <- function(x, n) {
x^3
}
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f(4)
f(1)
g<-function(y){y+z}
g(3)
x <- 1:10
if(x > 5) {
x <- 0
}
g <- function(y) { a <- 100; f(y); }
g(3)
> g <- function(y) { a <- 100; f(y); }
f <- function(x) { a * x }
f(3)
g(3)
g <- function(y) { a <- 100; f(y); }
g(3)
a <- 10
g(3)
b <- 20
h <- function(x) { if (rbinom(1,1,0.5)) { b <- 1000 }; return(b * x); }
h(2)
h(2)
h(2)
h(2)
h(2)
h(2)
h(2)
h(2)
h(2)
load.packages('quantmod')
install.packages("quantmod")
load.packages('quantmod')
library("quantmod")
tickers = spl('TLT,IWM,GLD')
tickers = split('TLT,IWM,GLD')
require('quantmod')
require('FinancialInstrument')
tickers <- c("TLT", "IWM", "GLD")
data <- new.env()
getSymbols(tickers, src = 'yahoo', from = '1980-01-01', env = data)
library("quantmod")
library(quantmod)
?getsymbols
install.packages("quantmod")
library(quantmod)
install.packages("FinancialInstruments")
tickers <- c("TLT", "IWM", "GLD")
data <- new.env()
getSymbols(tickers, src = 'yahoo', from = '1980-01-01', env = data)
data
data <- new.env()
data <- new.env()
getSymbols(tickers, src = 'yahoo', from = '1980-01-01', env = data)
