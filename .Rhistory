hist(ui,"Sturges")
ui
?hist
qqplot(ui, qchisq(ppoints(ui), df = 4)); abline(0,1, col = 2, lty = 2)
?hist
hist(ui,20)
hist(ui,10)
ACF(ui)
act(ui)
acf(ui)
u
ui
var(ui)
uibar<-mean(ui)
varui<-(sum((ui-uibar)^2))/20
varui
var(ui)
?var
var
var(ui)
varui
(var(ui)*19)/20
varui/20
sqrt(varui/20)
2000*2000
500*500
price<-c(60000,40000,34000,63900,44000,46000,56000,38500,60500,55000,39000,41000,50900,52000,49000,80000,50000,59000,42000,71500)
carefulmean<-mean(price)
carefulmean
library(fpp)
fancy
timeplot<-window(fancy,from=1987,to=1993)
plot(timeplot,main="monthly sales",ylab="Sales")
?var
elec<-read.delim("clipboard")
elec
elec<-read.table(text = readClipboard(), sep = " ")
elec
elec<-read.delim("clipboard",header=TRUE)
elec<-read.delim("clipboard",header=TRUE)
elec<-read.delim("clipboard")
elec
elec<-read.delim("clipboard")
rm(elec)
elec<-read.delim("clipboard")
elec
rm(elec)
elec<-read.delim("clipboard")
elec
elec.ts<-ts(elec)
elec.ts
day<-mat(1:12)
day<-window(1:12)
day
day
args(solve.QP)
args(window)
args(mat)
agrs(ts)
args(ts)
site<-"http://earthquake.usgs.gov/earthquakes/map"
download.file(site,destfile="C:\Users\aidan\Desktop\Projects",method="curl")
download.file(site,destfile="C:/Users/aidan/Desktop/Projects/earthquakes",method="curl")
download.file(site,destfile="C:/Users/aidan/Desktop/Projects/earthquakes",method="curl")
eData<-read.csv("C:\Users\aidan\Desktop\Projects\earthquakes\all_week.csv")
eData<-read.csv("C:/Users/aidan/Desktop/Projects/earthquakes/all_week.csv")
header(eData)
head(eData)
eData[1,3]
datadownloaded<-date()
dateDownloaded<-date()
dateDownloaded
dim(eDAta)
dim(eData)
names(eData)
nrow(eData)
quantiles(eData$latitude)
quantile(eData$latitude)
summary(eData)
class(eData)
sapply(eData[1,class])
sapply(eData[1,],class)
unique(eData$place)
names(eData)
unique(eData$rms)
sum(is.na(eData))
install.packages("np")
vignette("np",package="np")
setwd("C:/Users/aidan/Desktop/Projects")
mw_test<-read.csv("mw_test.csv", header=TRUE)
mat_mw<-as.matrix(mw_test)
head(mat_mw)
quarter<-as.numeric(mat_mw[,2])
q2 <-as.numeric(quarter==2)
q3<-as.numeric(quarter==3)
q4<-as.numeric(quarter==4)
revenue<-as.numeric(mat_mw[,3])
gdp<-as.numeric(mat_mw[,6])
ad<-as.numeric(mat_mw[,7])
unemp<-as.numeric(mat_mw[,8])
fit<-lm(revenue~ad+gdp+unemp)
summary(fit)
fit2<-lm(revenue~q2+q3+q4+ad+gdp+unemp)
rm(list=ls())
getwd
getwd()
## We look at the following model:
## Y^* = theta_0 + theta_1 * X + e
## Y =2 if Y^*>=0, and 0 otherwise
## number of observations (try n=50, n=100, 150 to see the improvement)
n=500
## true parameters
theta_0=0.5
theta_1=1
set.seed(1)
## generate X
x= runif(n, min=-1, max=1)
## generate e
e = rnorm(n, mean = 0, sd=1)
## generate Y
ystar = theta_0 + theta_1 * x + e
y = ifelse(ystar >=0, 1, 0)
## we derived on class
objective = function(theta)
{
thetahat0 = theta[1]
thetahat1 = theta[2]
xtheta = thetahat0 + thetahat1 * x
s = y * log( pnorm(xtheta) ) + (1-y) * log( 1- pnorm(xtheta) )
S = -sum(s)
return(S)
}
## minimize the objective function, note we do unconstrained optimization.
## change the starting value from +/- 1 to 2
temp = optim(c(theta_0 + 1, theta_1 - 1), objective, method = "BFGS")
theta0hat = temp$par[1]
theta1hat = temp$par[2]
## what is the conditional expectation of y given x?
## in the bernoulli case it is easy to calculate the expecation
## it is the weighted average of its outcomes
## ie. 1*P{Y=1\X} + 0*P{Y=0\X}
## which is just P{Y=1\X}
## P{Y*>=0\X}
## P{X'Bo - u >= 0\ X}
## P{u <= X'Bo \ X}
## F(X'Bo)
## we assume that there is a single index model Y = m(X'Bo) + v
## given that E[v\X'Bo]
rm(list=ls())
##must recall library
library(MSBVAR)
## now bivariate case
n = 500
rho = 0.5
xw = rmultnorm(n, matrix(c(0,0),2,1), vmat=matrix(c(1,rho,rho,1),2,2))
x = xw[,1]
w = xw[,2]
c = 1/(2*pi*sqrt(1-rho^2) )
bd1 = bw.nrd(x)
bd2 = bw.nrd(w)
par(mfrow=c(1,2))
x_grid=seq(-3,3, by=.15)
w_grid=seq(-3,3, by=.15)
Y=matrix(NA, nrow=length(x_grid), ncol=length(w_grid))
for(i in 1:length(x_grid))
{
for(j in 1:length(w_grid))
{
Y[i,j] = c * exp( -1/2 * (1-rho^2)^(-1) * (x_grid[i]^2 + w_grid[j]^2 - 2*rho*x_grid[i]*w_grid[j]))
}
}
persp(x_grid, w_grid, Y, phi=20, theta=-50, col="yellow", shade=.000000001, ticktype="detailed",
xlab = "x" , ylab ="w" , zlab = "bivariate normal with mean (0,0) and rho=0.5", main = "truth")
bd1 = bw.nrd0(x)
bd2 = bw.nrd0 (w)
Yhat=matrix(NA, nrow=length(x_grid), ncol=length(w_grid))
for(i in 1:length(x_grid))
{
for(j in 1:length(w_grid))
{
Yhat[i,j] = 1/(n*bd2*bd2) * sum( dnorm( (x-x_grid[i])/bd1 ) * dnorm( (w - w_grid[j])/bd2 ))
}
}
persp(x_grid, w_grid, Yhat, phi=20, theta=-50, col="blue", shade=.000000001, ticktype="detailed",
xlab = "x" , ylab ="w" , zlab = "yhat", main="ESTIMATOR")
## demo for nonparametric regression
## sample size
n=5000
rm(list=ls())
## sample size
n=5000
set.seed(1)
## geneerate right hand side
x = runif(n,1,2)
w = rnorm(n)
e = rnorm(n)
##generate left hand side
y = w^2 + exp(x) + sqrt(x)*w + e
par(mfrow=c(1,2))
#grid for x same as grid for w
x_grid=seq(1,2,by=.05)
w_grid=seq(-2,2,by=.05)
Y=matrix(NA, nrow=length(x_grid), ncol=length(w_grid))
for(i in 1:length(x_grid))
{
for(j in 1:length(w_grid))
{Y[i,j]=w_grid[j]^2 + exp(x_grid[i]) + sqrt(x_grid[i])*w_grid[j]}
}
persp(x_grid,w_grid,Y,phi=0,theta=-50,col="green",shade=.00000001,ticktype="detailed",xlab="x",ylab="w",zlab="y = w^2 + exp(x) + sqrt(x)*w", main="TRUTH")
bd1 = bw.nrd0(x)
bd2 = bw.nrd0(w)
Yhat=matrix(NA,nrow=length(x_grid),ncol=length(w_grid))
for(i in 1:length(x_grid))
{
for(j in 1:length(w_grid))
{
K = dnorm((x - x_grid[i])/bd1)*dnorm( (w - w_grid[j])/bd2)
Yhat[i,j] = sum( y*K) / sum(K)
}
}
persp(x_grid,w_grid,Yhat,phi=0,theta=-50,col="orange",shade=.00000001,ticktype="detailed",xlab="x",ylab="w",zlab="y = w^2 + exp(x) + sqrt(x)*w", main="estimator")
rm(list=ls())
myfunction <- function() {
x<-rnorm(100)
mean(x)
}
ls()
myfuncation
myfunction
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
getwd()
ls
ls()
dir()
getwd()
ls
data<-read.csv("hmw_data.csv", header=TRUE)
getwd()
data<-read.csv("hm1_data.csv", header=TRUE)
getwd()
data<-read.csv("hw1_data.csv", header=TRUE)
dim(data)
data
dim(data)
names(data)
data[1:2,]
nrows(data)
dim(data)
data[152:153,]
data[47,1]
data[47,]
mo<-is.na(x[,1])
mo<-is.na(data[,1])
mo
table(mo)
nan<-is.nan(data[,1])
table(nan)
dirt_oz<-data[,1]
dirt_oz
mo<-is.na(dirt_oz)
mo
table(mo)
ozone<-dirty_oz(!mo)
ozone<-dirt_oz(!mo)
ozone<-dirt_oz[!mo]
dim(ozone)
ozone
length(ozone)
mean(ozone)
mean(dirt_oz)
data
dirt_data<-data
rm(data)
dim(dirt_data)
good<-complete.cases(dirt_data)
good
data[good]
data<-dirt_data[good]
data<-dirt_data[,good]
dim(good)
dim(mo)
ozone
dirt_data
any<-is.na(dirt_data[,4])
any
data<-dirt_data[!mo]
data<-dirt_data[!mo,1:6]
data
dim(data)
extract<-data[,c(1>31,4>90)]
extract
class(data)
data[,][,Ozone>31]
names(data)
over31<data[,Ozone>31]
over31<-data[,Ozone>31]
over31<-data[,data$Ozone>31]
over31<-data[,][,data$Ozone>31]
over31<-data[,]
dim(over31)
q18<-data[with(data, Ozone>31 & Temp>90),]
q18
dirt_data
q18
mean_q18<-mean(q18[,2])
mean_q18
q_19<-data[Month==6,]
q_19<-data[data$Month==6,]
q19
q_19
q19<-data[data$Month==6,]
q19
mean_q19<-mean(q19[,4])
mean_q19
dirt_data
test<-dirt_data[dirt_data==6,]
test
test<-dirt_data[dirt_data$Month==6,]
test
mean_q19test<-mean(test[,Temp])
mean_q19test<-mean(test[,test$Temp])
test
mean_q19test<-mean(test[,4])
mean_q19test
dim(q19)
dim(test)
rq18<-dirt_data[with(dirt_data, Ozone>31 & Temp>90),]
rq18
mean_rq18<-mean(q18[,2])
mean_rq18
max(dirty_data[Month==5,1])
max(dirt_data[Month==5,1])
max(dirt_data[dirt_data$Month==5,1])
dirt_data
max(ozone)
max(data[data$Month==5,1])
mean(ozone)
mean(dirt_oz)
x <- c(4, TRUE) #second try at the quiz
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
class(cbind(x, y))
x <- 1:4 # Question 9
y <- 2:3 # Question 9
x + y # Question 9
what <- x + y
class(what)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] == 4
x[x >= 10] <- 4
x
data[1:2,] #q12
dim(data) #q13
dim(dirt_data)
dirt_data[152:153,] #q14
dirt_data[47,dirt_data$Ozone]
dirt_data[47,1]
data<-read.csv("hw1_data.csv", header=TRUE)  # load data for q11 onward
getwd()
dim(data)
names(data)
data[1:2,] #q12
nrows(data)
dim(data) #q13
data[152:153,] #q14
data[47,1] #q15
data[47,]
mo<-is.na(data[,1])
mo
table(mo)
nan<-is.nan(data[,1])
table(nan)
dirt_oz<-data[,1]
dirt_oz
mo<-is.na(dirt_oz)
mo
table(mo) #q16
ozone<-dirt_oz[!mo]
dim(ozone)
ozone
length(ozone)
mean(ozone) #q17
mean(dirt_oz)
data
dirt_data<-data
rm(data)
dim(mo)
dirt_data
data<-dirt_data[!mo,1:6]
data
dim(data)
names(data)
over31<-data[,]
dim(over31)
q18<-data[with(data, Ozone>31 & Temp>90),]
q18
dirt_data
q18
mean_q18<-mean(q18[,2])
mean_q18
q19<-data[data$Month==6,]
q19
mean_q19<-mean(q19[,4])
mean_q19
dirt_data
test<-dirt_data[dirt_data$Month==6,]
test
mean_q19test<-mean(test[,4])
mean_q19test
dim(q19)
dim(test)
mean_q19test
dim(q19)
dim(test)
rq18<-dirt_data[with(dirt_data, Ozone>31 & Temp>90),]
rq18
mean_rq18<-mean(q18[,2])
mean_rq18
max(data[data$Month==5,1])
x<-4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- 1:4
y <- 2
x + y
x <- c(3, 5, 1, 10, 12, 6)
x[x <= 5] <- 0
x
data<-read.csv("hw1_data.csv", header=TRUE)  # load data for q11 onward
getwd()
dim(data)
names(data)
data[1:2,] #q12
nrows(data)
dim(data) #q13
data[152:153,] #q14
data[47,1] #q15
data[47,]
mo<-is.na(data[,1])
mo
table(mo)
nan<-is.nan(data[,1])
table(nan)
dirt_oz<-data[,1]
dirt_oz
mo<-is.na(dirt_oz)
mo
table(mo) #q16
ozone<-dirt_oz[!mo]
dim(ozone)
ozone
length(ozone)
mean(ozone) #q17
mean(dirt_oz)
data
dirt_data<-data
rm(data)
dim(mo)
dirt_data
data<-dirt_data[!mo,1:6]
data
dim(data)
names(data)
over31<-data[,]
dim(over31)
q18<-data[with(data, Ozone>31 & Temp>90),]
q18
dirt_data
q18
mean_q18<-mean(q18[,2])
mean_q18
q19<-data[data$Month==6,]
q19
mean_q19<-mean(q19[,4])
mean_q19
dirt_data
test<-dirt_data[dirt_data$Month==6,]
test
mean_q19test<-mean(test[,4])
mean_q19test
dim(q19)
dim(test)
rq18<-dirt_data[with(dirt_data, Ozone>31 & Temp>90),]
rq18
mean_rq18<-mean(q18[,2])
mean_rq18
max(data[data$Month==5,1])
x <- c(4, TRUE) #second try at the quiz
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
class(cbind(x, y))
x <- 1:4
y <- 2
x + y
x <- c(3, 5, 1, 10, 12, 6)
x[x <= 5] <- 0
x
q19<-data[data$Month==6,]
q19
mean_q19<-mean(q19[,4])
mean_q19
dirt_data
test<-dirt_data[dirt_data$Month==6,]
test
mean_q19test<-mean(test[,4])
mean_q19test
