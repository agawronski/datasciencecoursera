hist(sbux_log)
mean(sbux_log)
sbux_r <- exp(sbux_log)
sbux_r
sbux_r <- exp(sbux_log)-1
hist(sbux_r)
head(sbux_r)
tail(sbux_r)
sum(sbux_log)
sbux_log <- as.numeric(diff(log(s_price)))
sum(sbux_log)
class(sbux_log)
dim(sbux_log)
head(sbux_log)
tail(sbux_log)
length(sbux_log)
sbux_l <- sbux_log[complete.cases(sbux_log),]
sbux_l <- sbux_log[!is.na(sbux_log),]
sbux_l <- sbux_log[2:1940,]
log(1.1)
?log
hist(sbux_r)
?sd
sd(sbux_r)
hist(sbux_r)
?quantile
quantile(sbux_r, probs=0.05)
quantile(sbux_r, probs=0.05, na.rm=TRUE)
hist(sbux_r)
quantile(sbux_log, probs=0.05, na.rm=TRUE)
100000*0.03282645
100000*0.03337733
exp(-0.03337733)-1
0.03282645*100000
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
View(features)
x_test <- read.table(file="./getting_cleaning/course_project/test/X_test.txt", header=FALSE)
View(x_test)
names(x_test) <- features[,2]
View(x_test)
y_test <- read.table(file="./getting_cleaning/course_project/test/y_test.txt", header=FALSE)
names(y_test) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
test_df <- cbind(y_test, x_test)
#column bind the subject id
subject_id <- read.table(file="./getting_cleaning/course_project/test/subject_test.txt", header=FALSE)
names(subject_id) <- "subject_id"
test_df <- cbind(test_df, subject_id)
#merge test_df and the activity labels
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
test_df <- merge(test_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(test_df)[564] <- "activity" #rename new activty column
#column bind all of the remaining testdata
View(test_df)
?pnorm
?quantile
?qnorm
?quantile
library(data.table)
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
x_test <- read.table(file="./getting_cleaning/course_project/test/X_test.txt", header=FALSE)
names(x_test) <- features[,2]
y_test <- read.table(file="./getting_cleaning/course_project/test/y_test.txt", header=FALSE)
names(y_test) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
test_df <- cbind(y_test, x_test)
#column bind the subject id
subject_id <- read.table(file="./getting_cleaning/course_project/test/subject_test.txt", header=FALSE)
names(subject_id) <- "subject_id"
test_df <- cbind(test_df, subject_id)
#merge test_df and the activity labels
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
test_df <- merge(test_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(test_df)[564] <- "activity" #rename new activty column
#column bind all of the remaining testdata
#Repeat the process with the training set
library(data.table)
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
x_train <- read.table(file="./getting_cleaning/course_project/train/X_train.txt", header=FALSE)
names(x_train) <- features[,2]
y_train <- read.table(file="./getting_cleaning/course_project/train/y_train.txt", header=FALSE)
names(y_train) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
train_df <- cbind(y_train, x_train)
#column bind the subject id
subject_id <- read.table(file="./getting_cleaning/course_project/train/subject_train.txt", header=FALSE)
names(subject_id) <- "subject_id"
train_df <- cbind(train_df, subject_id)
#merge train_df and the activity labels
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
train_df <- merge(train_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(train_df)[564] <- "activity" #rename new activty column
activity_labels <- read.table(file="activity_labels.txt", header=FALSE)
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
activity labels
activity_labels
?substr
activity_labels <- tolower(gsub("_", "", activity_labels[,2]))
activity_labels
activity_labels[,2] <- tolower(gsub("_", "", activity_labels[,2]))
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
#remove the underscore and make all lower case
activity_labels[,2] <- tolower(gsub("_", "", activity_labels[,2]))
activity_labels
substr(activity_labels[2,2], 8,8) <- toupper(substr(activity_labels[2,2], 8,8))
activity_labels
substr(activity_labels[3,2], 8,8) <- toupper(substr(activity_labels[2,2], 8,8))
activity_labels
substr(activity_labels[3,2], 8,8) <- toupper(substr(activity_labels[3,2], 8,8))
activity_labels
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
#remove the underscore and make all lower case
activity_labels[,2] <- tolower(gsub("_", "", activity_labels[,2]))
#capitalize the first letter of upstairs for readability
substr(activity_labels[2,2], 8,8) <- toupper(substr(activity_labels[2,2], 8,8))
#capitalize the first letter of downstairs for readability
substr(activity_labels[3,2], 8,8) <- toupper(substr(activity_labels[3,2], 8,8))
activity_labels
library(data.table)
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
x_test <- read.table(file="./getting_cleaning/course_project/test/X_test.txt", header=FALSE)
names(x_test) <- features[,2]
y_test <- read.table(file="./getting_cleaning/course_project/test/y_test.txt", header=FALSE)
names(y_test) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
test_df <- cbind(y_test, x_test)
#column bind the subject id
subject_id <- read.table(file="./getting_cleaning/course_project/test/subject_test.txt", header=FALSE)
names(subject_id) <- "SubjectId"
test_df <- cbind(test_df, subject_id)
#merge test_df and the activity labels
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
#remove the underscore and make all lower case
activity_labels[,2] <- tolower(gsub("_", "", activity_labels[,2]))
#capitalize the first letter of upstairs for readability
substr(activity_labels[2,2], 8,8) <- toupper(substr(activity_labels[2,2], 8,8))
#capitalize the first letter of downstairs for readability
substr(activity_labels[3,2], 8,8) <- toupper(substr(activity_labels[3,2], 8,8))
test_df <- merge(test_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(test_df)[564] <- "activity" #rename new activty column
#Repeat the process with the training set
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
x_train <- read.table(file="./getting_cleaning/course_project/train/X_train.txt", header=FALSE)
names(x_train) <- features[,2]
y_train <- read.table(file="./getting_cleaning/course_project/train/y_train.txt", header=FALSE)
names(y_train) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
train_df <- cbind(y_train, x_train)
#column bind the subject id
subject_id <- read.table(file="./getting_cleaning/course_project/train/subject_train.txt", header=FALSE)
names(subject_id) <- "SubjectId"
train_df <- cbind(train_df, subject_id)
#merge train_df and the activity labels
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
train_df <- merge(train_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(train_df)[564] <- "activity" #rename new activty column
#Combine the test and training sets
library(dplyr)
test_df <- tbl_df(test_df)
train_df <- tbl_df(train_df)
data_set <- rbind(train_df, test_df)
# select only measurements on mean and standard deviation
data_set <- data_set %>%
select(SubjectId, activity, contains("mean"), contains("std"), -contains("angle"))
#remove the function parenthesis
names(data_set) <- gsub("\\()", "", names(data_set))
#remove the time indicator as the f (FFT) indicator is enough of a differentiator
names(data_set) <- sub("^t", "", names(data_set))
#eliminate the double body (?typo)
names(data_set) <- sub("BodyBody", "Body", names(data_set))
#Change mean to Mean for readability
names(data_set) <- sub("mean", "Mean", names(data_set))
#Remove -
names(data_set) <- gsub("-", "", names(data_set))
#Replace std with Std for readability
names(data_set) <- gsub("std", "Std", names(data_set))
#average each variable for each activity and each subject
grouped_set <- group_by(data_set, activity, SubjectId)
final_set <- summarise_each(grouped_set, "mean")
View(final_set)
write.table(final_set, file="./getting_cleaning/course_project/final_set.txt", row.names=FALSE)
library(data.table)
library(data.table)
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
x_test <- read.table(file="./getting_cleaning/course_project/test/X_test.txt", header=FALSE)
names(x_test) <- features[,2]
y_test <- read.table(file="./getting_cleaning/course_project/test/y_test.txt", header=FALSE)
names(y_test) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
test_df <- cbind(y_test, x_test)
#column bind the subject id
subject_id <- read.table(file="./getting_cleaning/course_project/test/subject_test.txt", header=FALSE)
names(subject_id) <- "SubjectId"
test_df <- cbind(test_df, subject_id)
#merge test_df and the activity labels
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
#remove the underscore and make all lower case
activity_labels[,2] <- tolower(gsub("_", "", activity_labels[,2]))
#capitalize the first letter of upstairs for readability
substr(activity_labels[2,2], 8,8) <- toupper(substr(activity_labels[2,2], 8,8))
#capitalize the first letter of downstairs for readability
substr(activity_labels[3,2], 8,8) <- toupper(substr(activity_labels[3,2], 8,8))
test_df <- merge(test_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(test_df)[564] <- "activity" #rename new activty column
#Repeat the process with the training set
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
x_train <- read.table(file="./getting_cleaning/course_project/train/X_train.txt", header=FALSE)
names(x_train) <- features[,2]
y_train <- read.table(file="./getting_cleaning/course_project/train/y_train.txt", header=FALSE)
names(y_train) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
train_df <- cbind(y_train, x_train)
#column bind the subject id
subject_id <- read.table(file="./getting_cleaning/course_project/train/subject_train.txt", header=FALSE)
names(subject_id) <- "SubjectId"
train_df <- cbind(train_df, subject_id)
#merge train_df and the activity labels
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
#remove the underscore and make all lower case
activity_labels[,2] <- tolower(gsub("_", "", activity_labels[,2]))
#capitalize the first letter of upstairs for readability
substr(activity_labels[2,2], 8,8) <- toupper(substr(activity_labels[2,2], 8,8))
#capitalize the first letter of downstairs for readability
substr(activity_labels[3,2], 8,8) <- toupper(substr(activity_labels[3,2], 8,8))
train_df <- merge(train_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(train_df)[564] <- "activity" #rename new activty column
#Combine the test and training sets
library(dplyr)
test_df <- tbl_df(test_df)
train_df <- tbl_df(train_df)
data_set <- rbind(train_df, test_df)
# select only measurements on mean and standard deviation
data_set <- data_set %>%
select(SubjectId, activity, contains("mean"), contains("std"), -contains("angle"))
#remove the function parenthesis
names(data_set) <- gsub("\\()", "", names(data_set))
#remove the time indicator as the f (FFT) indicator is enough of a differentiator
names(data_set) <- sub("^t", "", names(data_set))
#eliminate the double body (?typo)
names(data_set) <- sub("BodyBody", "Body", names(data_set))
#Change mean to Mean for readability
names(data_set) <- sub("mean", "Mean", names(data_set))
#Remove -
names(data_set) <- gsub("-", "", names(data_set))
#Replace std with Std for readability
names(data_set) <- gsub("std", "Std", names(data_set))
#average each variable for each activity and each subject
grouped_set <- group_by(data_set, activity, SubjectId)
final_set <- summarise_each(grouped_set, "mean")
View(final_set)
write.table(final_set, file="./getting_cleaning/course_project/final_set.txt", row.names=FALSE)
features
str(features)
str(x_test)
x_test <- read.table(file="./getting_cleaning/course_project/test/X_test.txt", header=FALSE)
str(x_test)
names(x_test) <- features[,2]
y_test <- read.table(file="./getting_cleaning/course_project/test/y_test.txt", header=FALSE)
y_test
str(y_test)
library(data.table)
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
x_test <- read.table(file="./getting_cleaning/course_project/test/X_test.txt", header=FALSE)
names(x_test) <- features[,2]
y_test <- read.table(file="./getting_cleaning/course_project/test/y_test.txt", header=FALSE)
names(y_test) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
test_df <- cbind(y_test, x_test)
#column bind the subject id
subject_id <- read.table(file="./getting_cleaning/course_project/test/subject_test.txt", header=FALSE)
names(subject_id) <- "SubjectId"
test_df <- cbind(test_df, subject_id)
#merge test_df and the activity labels
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
#remove the underscore and make all lower case
activity_labels[,2] <- tolower(gsub("_", "", activity_labels[,2]))
#capitalize the first letter of upstairs for readability
substr(activity_labels[2,2], 8,8) <- toupper(substr(activity_labels[2,2], 8,8))
#capitalize the first letter of downstairs for readability
substr(activity_labels[3,2], 8,8) <- toupper(substr(activity_labels[3,2], 8,8))
test_df <- merge(test_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(test_df)[564] <- "activity" #rename new activty column
str(test_df)
names(test_df)
dim(test_df)
library(data.table)
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
x_test <- read.table(file="./getting_cleaning/course_project/test/X_test.txt", header=FALSE)
names(x_test) <- features[,2]
y_test <- read.table(file="./getting_cleaning/course_project/test/y_test.txt", header=FALSE)
names(y_test) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
test_df <- cbind(y_test, x_test)
#column bind the subject id
subject_id <- read.table(file="./getting_cleaning/course_project/test/subject_test.txt", header=FALSE)
names(subject_id) <- "SubjectId"
test_df <- cbind(test_df, subject_id)
dim(test_df)
#merge test_df and the activity labels
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
#remove the underscore and make all lower case
activity_labels[,2] <- tolower(gsub("_", "", activity_labels[,2]))
#capitalize the first letter of upstairs for readability
substr(activity_labels[2,2], 8,8) <- toupper(substr(activity_labels[2,2], 8,8))
#capitalize the first letter of downstairs for readability
substr(activity_labels[3,2], 8,8) <- toupper(substr(activity_labels[3,2], 8,8))
test_df <- merge(test_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(test_df)[564] <- "activity" #rename new activty column
#Repeat the process with the training set
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
x_train <- read.table(file="./getting_cleaning/course_project/train/X_train.txt", header=FALSE)
dim(x_train)
names(final_set)
library(data.table)
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
x_test <- read.table(file="./getting_cleaning/course_project/test/X_test.txt", header=FALSE)
names(x_test) <- features[,2]
y_test <- read.table(file="./getting_cleaning/course_project/test/y_test.txt", header=FALSE)
names(y_test) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
test_df <- cbind(y_test, x_test)
#column bind the subject id
subject_id <- read.table(file="./getting_cleaning/course_project/test/subject_test.txt", header=FALSE)
names(subject_id) <- "SubjectId"
test_df <- cbind(test_df, subject_id)
#merge test_df and the activity labels
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
#remove the underscore and make all lower case
activity_labels[,2] <- tolower(gsub("_", "", activity_labels[,2]))
#capitalize the first letter of upstairs for readability
substr(activity_labels[2,2], 8,8) <- toupper(substr(activity_labels[2,2], 8,8))
#capitalize the first letter of downstairs for readability
substr(activity_labels[3,2], 8,8) <- toupper(substr(activity_labels[3,2], 8,8))
test_df <- merge(test_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(test_df)[564] <- "activity" #rename new activty column
#Repeat the process with the training set
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="./getting_cleaning/course_project/features.txt", header=FALSE)
x_train <- read.table(file="./getting_cleaning/course_project/train/X_train.txt", header=FALSE)
names(x_train) <- features[,2]
y_train <- read.table(file="./getting_cleaning/course_project/train/y_train.txt", header=FALSE)
names(y_train) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
train_df <- cbind(y_train, x_train)
#column bind the subject id
subject_id <- read.table(file="./getting_cleaning/course_project/train/subject_train.txt", header=FALSE)
names(subject_id) <- "SubjectId"
train_df <- cbind(train_df, subject_id)
#merge train_df and the activity labels
activity_labels <- read.table(file="./getting_cleaning/course_project/activity_labels.txt", header=FALSE)
#remove the underscore and make all lower case
activity_labels[,2] <- tolower(gsub("_", "", activity_labels[,2]))
#capitalize the first letter of upstairs for readability
substr(activity_labels[2,2], 8,8) <- toupper(substr(activity_labels[2,2], 8,8))
#capitalize the first letter of downstairs for readability
substr(activity_labels[3,2], 8,8) <- toupper(substr(activity_labels[3,2], 8,8))
train_df <- merge(train_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(train_df)[564] <- "activity" #rename new activty column
#Combine the test and training sets
library(dplyr)
test_df <- tbl_df(test_df)
train_df <- tbl_df(train_df)
data_set <- rbind(train_df, test_df)
# select only measurements on mean and standard deviation
data_set <- data_set %>%
select(SubjectId, activity, contains("mean"), contains("std"), -contains("angle"))
#remove the function parenthesis
names(data_set) <- gsub("\\()", "", names(data_set))
#remove the time indicator as the f (FFT) indicator is enough of a differentiator
names(data_set) <- sub("^t", "", names(data_set))
#eliminate the double body (?typo)
names(data_set) <- sub("BodyBody", "Body", names(data_set))
#Change mean to Mean for readability
names(data_set) <- sub("mean", "Mean", names(data_set))
#Remove -
names(data_set) <- gsub("-", "", names(data_set))
#Replace std with Std for readability
names(data_set) <- gsub("std", "Std", names(data_set))
#average each variable for each activity and each subject
grouped_set <- group_by(data_set, activity, SubjectId)
final_set <- summarise_each(grouped_set, "mean")
View(final_set)
write.table(final_set, file="./getting_cleaning/course_project/final_set.txt", row.names=FALSE)
names(final_set)
str(final_set)
data_set[activity=="laying",]
data_set[data_set$activity=="laying",]
data_set[data_set$activity=="laying" & data_set$SubjectId==1,]
dim(data_set[data_set$activity=="laying" & data_set$SubjectId==1,])
dim(data_set[data_set$activity=="laying" & data_set$SubjectId==2,])
dim(data_set[data_set$activity=="laying" & data_set$SubjectId==3,])
dim(data_set[data_set$activity=="laying" & data_set$SubjectId==4,])
dim(data_set[data_set$activity=="laying" & data_set$SubjectId==5,])
dim(data_set[data_set$activity=="laying" & data_set$SubjectId==6,])
dim(data_set[data_set$activity=="laying" & data_set$SubjectId==7,])
for (i in 1:30) {dim(data_set[data_set$activity=="laying" & data_set$SubjectId==i,])}
for (i in 1:30) {print(dim(data_set[data_set$activity=="laying" & data_set$SubjectId==i,]))}
for (i in 1:30) {print(dim(data_set[data_set$activity=="walking" & data_set$SubjectId==i,]))}
for (i in 1:30) {print(dim(data_set[data_set$activity=="walkingUpstairs" & data_set$SubjectId==i,]))}
for (i in 1:30) {print(dim(data_set[data_set$activity=="walkingDownstairs" & data_set$SubjectId==i,]))}
for (i in 1:30) {print(dim(data_set[data_set$activity=="sitting" & data_set$SubjectId==i,]))}
for (i in 1:30) {print(dim(data_set[data_set$activity=="standing" & data_set$SubjectId==i,]))}
for (i in 1:30) {print(dim(data_set[data_set$activity=="laying" & data_set$SubjectId==i,]))}
names(final_set)
str(final_set$activity)
str(final_set)
source("run_analysis.R")
source("course_project.R")
getwd()
source("/getting_cleaning/course_project.R")
source("/getting_cleaning/course_project/course_project.R")
source("./getting_cleaning/course_project/course_project.R")
library(data.table)
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="features.txt", header=FALSE)
x_test <- read.table(file="test/X_test.txt", header=FALSE)
names(x_test) <- features[,2]
y_test <- read.table(file="test/y_test.txt", header=FALSE)
names(y_test) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
test_df <- cbind(y_test, x_test)
#column bind the subject id
subject_id <- read.table(file="test/subject_test.txt", header=FALSE)
names(subject_id) <- "SubjectId"
test_df <- cbind(test_df, subject_id)
#merge test_df and the activity labels
activity_labels <- read.table(file="activity_labels.txt", header=FALSE)
#remove the underscore and make all lower case
activity_labels[,2] <- tolower(gsub("_", "", activity_labels[,2]))
#capitalize the first letter of upstairs for readability
substr(activity_labels[2,2], 8,8) <- toupper(substr(activity_labels[2,2], 8,8))
#capitalize the first letter of downstairs for readability
substr(activity_labels[3,2], 8,8) <- toupper(substr(activity_labels[3,2], 8,8))
test_df <- merge(test_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(test_df)[564] <- "activity" #rename new activty column
#Repeat the process with the training set
# 1 Merge Training data
# set features as the variable names for x_train
features <- read.table(file="features.txt", header=FALSE)
x_train <- read.table(file="train/X_train.txt", header=FALSE)
names(x_train) <- features[,2]
y_train <- read.table(file="train/y_train.txt", header=FALSE)
names(y_train) <- "labels" # to be replaced with activity labels
#column bind the "Training Labels" to the "Training Set"
train_df <- cbind(y_train, x_train)
#column bind the subject id
subject_id <- read.table(file="train/subject_train.txt", header=FALSE)
names(subject_id) <- "SubjectId"
train_df <- cbind(train_df, subject_id)
#merge train_df and the activity labels
activity_labels <- read.table(file="activity_labels.txt", header=FALSE)
#remove the underscore and make all lower case
activity_labels[,2] <- tolower(gsub("_", "", activity_labels[,2]))
#capitalize the first letter of upstairs for readability
substr(activity_labels[2,2], 8,8) <- toupper(substr(activity_labels[2,2], 8,8))
#capitalize the first letter of downstairs for readability
substr(activity_labels[3,2], 8,8) <- toupper(substr(activity_labels[3,2], 8,8))
train_df <- merge(train_df, activity_labels, by.x="labels", by.y="V1", all=TRUE)
colnames(train_df)[564] <- "activity" #rename new activty column
#Combine the test and training sets
library(dplyr)
test_df <- tbl_df(test_df)
train_df <- tbl_df(train_df)
data_set <- rbind(train_df, test_df)
# select only measurements on mean and standard deviation and remove the angle measurement
data_set <- data_set %>%
select(SubjectId, activity, contains("mean"), contains("std"), -contains("angle"))
#remove the function parenthesis
names(data_set) <- gsub("\\()", "", names(data_set))
#remove the time indicator as the f (FFT) indicator is enough of a differentiator
names(data_set) <- sub("^t", "", names(data_set))
#eliminate the double body (?typo)
names(data_set) <- sub("BodyBody", "Body", names(data_set))
#Change mean to Mean for readability
names(data_set) <- sub("mean", "Mean", names(data_set))
#Remove -
names(data_set) <- gsub("-", "", names(data_set))
#Replace std with Std for readability
names(data_set) <- gsub("std", "Std", names(data_set))
#average each variable for each activity and each subject
grouped_set <- group_by(data_set, activity, SubjectId)
final_set <- summarise_each(grouped_set, "mean")
#write the table into the working directory as final_set.txt
write.table(final_set, file="final_set.txt", row.names=FALSE)
#take a look at the tidy data set
View(final_set)
dim(final_set)
