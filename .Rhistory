<<<<<<< HEAD
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
best("TX","heart attack")
best<-function(state,outcome) {
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
if(state %in% all_data$State) {
three<-c("heart attack","heart failure", "pneumonia")
if(outcome %in% three) {
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
}
else stop("invalid outcome")
}
else stop("invalid state")
if (outcome=="heart attack") {
final_set<-state_data[,c("h_name","heart attack")]
vec<-as.numeric(final_set[,2])
min<-as.character(min(vec,na.rm=TRUE))
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
best("TX","heart attack")
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
best<-function(state,outcome) {
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
if(state %in% all_data$State) {
three<-c("heart attack","heart failure", "pneumonia")
if(outcome %in% three) {
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
}
else stop("invalid outcome")
}
else stop("invalid state")
if (outcome=="heart attack") {
final_set<-state_data[,c("h_name","heart attack")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
rm(list=ls())
best<-function(state,outcome) {
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
if(state %in% all_data$State) {
three<-c("heart attack","heart failure", "pneumonia")
if(outcome %in% three) {
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
}
else stop("invalid outcome")
}
else stop("invalid state")
if (outcome=="heart attack") {
final_set<-state_data[,c("h_name","heart attack")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
best("TX","heart attack")
best<-function(state,outcome) {
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
if(state %in% all_data$State) {
three<-c("heart attack","heart failure", "pneumonia")
if(outcome %in% three) {
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
}
else stop("invalid outcome")
}
else stop("invalid state")
if (outcome=="heart attack") {
final_set<-state_data[,c("h_name","heart attack")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
best("TX","heart attack")
best<-function(state,outcome) {
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
if(state %in% all_data$State) {
three<-c("heart attack","heart failure", "pneumonia")
if(outcome %in% three) {
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
}
else stop("invalid outcome")
}
else stop("invalid state")
if (outcome=="heart attack") {
final_set<-state_data[,c("h_name","heart attack")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
besth<-final_set[final_set[,2]==min,1]
dim(besth)
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
best("TX","heart attack")
best("MD","pneumonia")
best("MD","heart attack")
best("TX","heart attack")
best("TX","heart failure")
best("TX","heart pnemonia")
best("TX","pnemonia")
best("TX","pneumonia")
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
all_data[4104,]
all_data[4103,]
all_data[4103,c(2,11,17,23)]
best<-function(state,outcome) {
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
if(state %in% all_data$State) {
three<-c("heart attack","heart failure", "pneumonia")
if(outcome %in% three) {
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
}
else stop("invalid outcome")
}
else stop("invalid state")
if (outcome=="heart attack") {
final_set<-state_data[,c("h_name","heart attack")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
besth<-final_set[final_set[,2]==min,c(1,2)]
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
best("TX","heart attack")
best<-function(state,outcome) {
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
if(state %in% all_data$State) {
three<-c("heart attack","heart failure", "pneumonia")
if(outcome %in% three) {
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
}
else stop("invalid outcome")
}
else stop("invalid state")
if (outcome=="heart attack") {
final_set<-state_data[,c("h_name","heart attack")]
vec<-as.numeric(final_set[,2])
print(vec)
min<-min(vec,na.rm=TRUE)
print(min)
besth<-final_set[final_set[,2]==min,c(1,2)]
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
best("TX","heart attack")
best<-function(state,outcome) {
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
if(state %in% all_data$State) {
three<-c("heart attack","heart failure", "pneumonia")
if(outcome %in% three) {
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
}
else stop("invalid outcome")
}
else stop("invalid state")
if (outcome=="heart attack") {
final_set<-state_data[,c("h_name","heart attack")]
print(head(final_set))
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
besth<-final_set[final_set[,2]==min,]
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
best("TX","heart attack")
best<-function(state,outcome) {
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
if(state %in% all_data$State) {
three<-c("heart attack","heart failure", "pneumonia")
if(outcome %in% three) {
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
}
else stop("invalid outcome")
}
else stop("invalid state")
if (outcome=="heart attack") {
final_set<-state_data[,c("h_name","heart attack")]
print(head(final_set))
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
besth<-final_set[final_set[,"heart attack"]==min,]
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
best("TX","heart attack")
rm(list=ls())
best<-function(state,outcome) {
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
if(state %in% all_data$State) {
three<-c("heart attack","heart failure", "pneumonia")
if(outcome %in% three) {
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
}
else stop("invalid outcome")
}
else stop("invalid state")
if (outcome=="heart attack") {
final_set<-state_data[,c("h_name","heart attack")]
print(head(final_set))
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
best("TX","heart attack")
best<-function(state,outcome) {
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
if(state %in% all_data$State) {
three<-c("heart attack","heart failure", "pneumonia")
if(outcome %in% three) {
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
}
else stop("invalid outcome")
}
else stop("invalid state")
if (outcome=="heart attack") {
final_set<-state_data[,c("h_name","heart attack")]
print(head(final_set))
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
best("TX","heart attack")
best("MD","pneumonia")
best<-function(state,outcome) {
all_data<-read.csv("outcome-of-care-measures.csv",colClasses="character")
if(state %in% all_data$State) {
three<-c("heart attack","heart failure", "pneumonia")
if(outcome %in% three) {
state_data<-all_data[which(all_data$State==state),c(2,11,17,23)]
names(state_data)<-c("h_name","heart attack","heart failure","pneumonia")
}
else stop("invalid outcome")
}
else stop("invalid state")
if (outcome=="heart attack") {
final_set<-state_data[,c("h_name","heart attack")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="heart failure") {
final_set<-state_data[,c("h_name","heart failure")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
else if (outcome=="pneumonia") {
final_set<-state_data[,c("h_name","pneumonia")]
vec<-as.numeric(final_set[,2])
min<-min(vec,na.rm=TRUE)
print(min)
class(min)
besth<-final_set[final_set[,2]==min,1]
print(besth)
}
}
best("MD","pneumonia")
best("TX","heart attack")
=======
}
final_table<-data.frame() #empty
for (i in id){
final_table<-rbind(final_table, c(i,sum(complete.cases(all_data[all_data$ID==i,]))))
}
colnames(final_table)<-c("id","nobs")
print(final_table)
}
getwd()
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
greater<-data.frame()
for (i in 1:100){
greater<-rbind(greater, c(i,sum(complete.cases(all_data[all_data$ID==i,]))))
}
colnames(greater)<-c("monitor","cases")
print(greater)
names(greater)
}
rm(list=ls())
getwd()
setwd("C:/Users/NC/data_science")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
greater<-data.frame()
for (i in 1:100){
greater<-rbind(greater, c(i,sum(complete.cases(all_data[all_data$ID==i,]))))
}
colnames(greater)<-c("monitor","cases")
print(greater)
names(greater)
}corr("specdata",0)
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
greater<-data.frame()
for (i in 1:100){
greater<-rbind(greater, c(i,sum(complete.cases(all_data[all_data$ID==i,]))))
}
colnames(greater)<-c("monitor","cases")
print(greater)
names(greater)
}
rm(list=ls())
getwd()
setwd("C:/Users/NC/data_science")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
greater<-data.frame()
for (i in 1:100){
greater<-rbind(greater, c(i,sum(complete.cases(all_data[all_data$ID==i,]))))
}
colnames(greater)<-c("monitor","cases")
print(greater)
names(greater)
corr("specdata",0)
end
}
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
greater<-data.frame()
for (i in 1:100){
greater<-rbind(greater, c(i,sum(complete.cases(all_data[all_data$ID==i,]))))
}
colnames(greater)<-c("monitor","cases")
print(greater)
names(greater)
}
rm(list=ls())
getwd()
setwd("C:/Users/NC/data_science")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
greater<-data.frame()
for (i in 1:100){
greater<-rbind(greater, c(i,sum(complete.cases(all_data[all_data$ID==i,]))))
}
colnames(greater)<-c("monitor","cases")
print(greater)
names(greater)
corr("specdata",0)
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
greater<-data.frame()
for (i in 1:100){
greater<-rbind(greater, c(i,sum(complete.cases(all_data[all_data$ID==i,]))))
}
colnames(greater)<-c("monitor","cases")
print(greater)
names(greater)
}
}
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
greater<-data.frame()
for (i in 1:100){
greater<-rbind(greater, c(i,sum(complete.cases(all_data[all_data$ID==i,]))))
}
colnames(greater)<-c("monitor","cases")
print(greater)
names(greater)
}
corr("specdata",0)
corr
greater[greater$cases>150,]
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
greater<-data.frame()
for (i in 1:100){
greater<-rbind(greater, c(i,sum(complete.cases(all_data[all_data$ID==i,]))))
}
colnames(greater)<-c("monitor","cases")
print(greater)
names(greater)
greater[greater$cases>150,]
}
corr("specdata",0)
?cor
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
all_data
head(all_data)
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
greater<-data.frame()
for (j in 1:100){
greater<-rbind(greater, c(i,sum(complete.cases(all_data[all_data$ID==j,]))))
}
colnames(greater)<-c("monitor","cases")
print(greater)
names(greater)
greater[greater$cases>150,]
clean_data<-all_data[complete.cases(all_data)==TRUE,]
print(clean_data)
cor_vec<-rep(NA,100)
for (k in 1:100){
cor_vec<-
}
}
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
greater<-data.frame()
for (j in 1:100){
greater<-rbind(greater, c(i,sum(complete.cases(all_data[all_data$ID==j,]))))
}
colnames(greater)<-c("monitor","cases")
print(greater)
names(greater)
greater[greater$cases>150,]
clean_data<-all_data[complete.cases(all_data)==TRUE,]
print(clean_data)
length(clean_data)
dim(clean_data)
head(clean_data)
clean_data_sulfate
clean_data$sulfate
head(clean_data)
clean_data$sulfate[clean_data$ID==greater$monitor & greater$cases>threshold]
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
complete<-data.frame()
for (j in 1:100){
complete<-rbind(complete, c(i,sum(complete.cases(all_data[all_data$ID==j,]))))
}
colnames(complete)<-c("monitor","cases")
print(complete)
names(complete)
greater<-complete[complete$cases>150,]
clean_data<-all_data[complete.cases(all_data)==TRUE,]
print(clean_data)
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
complete<-data.frame()
for (j in 1:100){
complete<-rbind(complete, c(i,sum(complete.cases(all_data[all_data$ID==j,]))))
}
colnames(complete)<-c("monitor","cases")
head(complete)
dim(all_data)
srt(all_data)
str(all_data)
str(complete)
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
complete<-data.frame()
for (j in 1:100){
complete<-rbind(complete, c(j,sum(complete.cases(all_data[all_data$ID==j,]))))
}
colnames(complete)<-c("monitor","cases")
head(compelte)
head(complete)
clean_data<-all_data[complete.cases(all_data)==TRUE,]
head(clean_data)
dim(all_data)
dim(clean_data)
head(greater)
head(complete)
greater<-complete[complete$cases>150,]
head(greater)
greater
cor(clean_data$sulfate,clean_data$nitrate)
(subset(clean_data$sulfate,clean_data$ID==5)
end
subset(clean_data$sulfate,clean_data$ID==5
)
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
complete<-data.frame() #will contain number of complete cases per monitor
for (j in 1:100){
complete<-rbind(complete, c(j,sum(complete.cases(all_data[all_data$ID==j,]))))
}
colnames(complete)<-c("monitor","cases")
print(complete)
names(complete)
greater<-complete[complete$cases>threshold,]
clean_data<-all_data[complete.cases(all_data)==TRUE,]
print(clean_data)
cor_vec<-rep(NA,100)
for (k in greater$monitor){
cor_vec<-c(cor(subset(clean_data$sulfate,clean_data$ID==k),subset(clean_data$nitrate,clean_data$ID==k)))
}
print(cor_vec)
}
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame()
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
complete<-data.frame() #will contain number of complete cases per monitor
for (j in 1:100){
complete<-rbind(complete, c(j,sum(complete.cases(all_data[all_data$ID==j,]))))
}
colnames(complete)<-c("monitor","cases")
print(complete)
names(complete)
greater<-complete[complete$cases>threshold,]
clean_data<-all_data[complete.cases(all_data)==TRUE,]
print(clean_data)
cor_vec<-rep(NA,100)
for (k in greater$monitor){
cor_vec<-c(cor(subset(clean_data$sulfate,clean_data$ID==k),subset(clean_data$nitrate,clean_data$ID==k)))
}
print(cor_vec)
}
corr("specdata", 150)
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame() # all data data, sulfate, nitrate, ID
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
head(all_data)
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame() # all data "Date", "sulfate", "nitrate", "ID"
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
complete<-data.frame() #will contain number of complete cases per monitor
for (j in 1:100){
complete<-rbind(complete, c(j,sum(complete.cases(all_data[all_data$ID==j,]))))
}
colnames(complete)<-c("monitor","cases") # complete has "monitor" and "cases"
greater<-complete[complete$cases>threshold,] # subset of complete with monitors above threshold
clean_data<-all_data[complete.cases(all_data)==TRUE,] # clean all_data
cor_vec<-rep(NA,100)
for (k in greater$monitor){
cor_vec<-c(cor(subset(clean_data$sulfate,clean_data$ID==k),subset(clean_data$nitrate,clean_data$ID==k)))
}
print(cor_vec)
}
corr("specdata", 150)
?cbind
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame() # all data "Date", "sulfate", "nitrate", "ID"
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
complete<-data.frame() #will contain number of complete cases per monitor
for (j in 1:100){
complete<-rbind(complete, c(j,sum(complete.cases(all_data[all_data$ID==j,]))))
}
colnames(complete)<-c("monitor","cases") # complete has "monitor" and "cases"
greater<-complete[complete$cases>threshold,] # subset of complete with monitors above threshold
clean_data<-all_data[complete.cases(all_data)==TRUE,] # clean all_data
cor_vec<-rep(NA,100)
for (k in greater$monitor){
cor_vec<-cbind(cor(subset(clean_data$sulfate,clean_data$ID==k),subset(clean_data$nitrate,clean_data$ID==k)))
}
print(cor_vec)
}
corr("specdata", 150)
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame() # all data "Date", "sulfate", "nitrate", "ID"
for (i in 1:100){
all_data<-rbind(all_data, read.csv(files[i]))
}
complete<-data.frame() #will contain number of complete cases per monitor
for (j in 1:100){
complete<-rbind(complete, c(j,sum(complete.cases(all_data[all_data$ID==j,]))))
}
colnames(complete)<-c("monitor","cases") # complete has "monitor" and "cases"
greater<-complete[complete$cases>150,]
clean_data<-all_data[complete.cases(all_data)==TRUE,] # clean all_data
cor_vec<-rep(NA,100)
for (k in greater$monitor){
cor_vec<-cbind(cor(subset(clean_data$sulfate,clean_data$ID==k),subset(clean_data$nitrate,clean_data$ID==k)))
}
print(cor_vec)
dim(cor_vec)
cor_vec<-data.frame()
for (k in greater$monitor){
cor_vec<-cbind(cor(subset(clean_data$sulfate,clean_data$ID==k),subset(clean_data$nitrate,clean_data$ID==k)))
}
print(cor_vec)
greater$monitor
cor_vec
for (k in greater$monitor){
cor_vec<-cbind(cor(subset(clean_data$sulfate,clean_data$ID==k),subset(clean_data$nitrate,clean_data$ID==k)))
}
cor_vec
cor_vec<-data.frame()
for (k in greater$monitor){
cor_vec<-cbind(cor_vec, cor(subset(clean_data$sulfate,clean_data$ID==k),subset(clean_data$nitrate,clean_data$ID==k)))
}
cor_vec<-data.frame()
for (k in greater$monitor){
cor_vec<-rbind(cor_vec, cor(subset(clean_data$sulfate,clean_data$ID==k),subset(clean_data$nitrate,clean_data$ID==k)))
}
print(cor_vec)
class(cor_vec)
dim(cor_vec)
names(cor_vec)
cor_vec<-data.frame()
for (k in greater$monitor){
cor_vec<-rbind(cor_vec, cor(subset(clean_data$sulfate,clean_data$ID==k),subset(clean_data$nitrate,clean_data$ID==k)))
}
final<-as.vector(as.matrix(cor_vec))
print(final)
head(final)
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
all_data<-data.frame() # all data "Date", "sulfate", "nitrate", "ID"
for (i in 1:n){
all_data<-rbind(all_data, read.csv(files[i]))
}
complete<-data.frame() #will contain number of complete cases per monitor
for (j in 1:n){
complete<-rbind(complete, c(j,sum(complete.cases(all_data[all_data$ID==j,]))))
}
colnames(complete)<-c("monitor","cases") # complete has "monitor" and "cases"
greater<-complete[complete$cases>threshold,] # subset of complete with monitors above threshold
clean_data<-all_data[complete.cases(all_data)==TRUE,] # clean all_data
cor_vec<-data.frame()
for (k in greater$monitor){
cor_vec<-rbind(cor_vec, cor(subset(clean_data$sulfate,clean_data$ID==k),subset(clean_data$nitrate,clean_data$ID==k)))
}
final<-as.vector(as.matrix(cor_vec))
print(final)
}
cr <- corr("specdata", 150)
head(cr)
rm(list=ls())
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera")
corr <- function(directory, threshold = 0) {
files<-list.files("specdata",full.names=TRUE)
n<-length(files)
all_data<-data.frame() # all data "Date", "sulfate", "nitrate", "ID"
for (i in 1:n){
all_data<-rbind(all_data, read.csv(files[i]))
}
complete<-data.frame() #will contain number of complete cases per monitor
for (j in 1:n){
complete<-rbind(complete, c(j,sum(complete.cases(all_data[all_data$ID==j,]))))
}
colnames(complete)<-c("monitor","cases") # complete has "monitor" and "cases"
greater<-complete[complete$cases>threshold,] # subset of complete with monitors above threshold
clean_data<-all_data[complete.cases(all_data)==TRUE,] # clean all_data
cor_vec<-data.frame()
for (k in greater$monitor){
cor_vec<-rbind(cor_vec, cor(subset(clean_data$sulfate,clean_data$ID==k),subset(clean_data$nitrate,clean_data$ID==k)))
}
final<-as.vector(as.matrix(cor_vec))
print(final)
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
files<-list.files("specdata",full.names=TRUE)
n<-length(files)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit
submit()
rm(list=ls())
getwd()
source("submitscript1.R")
submit
submit()
submit()
submit()
submit()
rm(list=ls())
source("submitscript1.R")
submit()
submit()
submit()
submit()
submit
submit()
submit()
submit()
>>>>>>> 0f59ecfe8eeb88abd5bcee39d736ffb133eda6a6
submit()
