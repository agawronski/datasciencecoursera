install.packages(RMySQL)
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(httr)
?oauth_endpoints
oauth_endpoints("github")
?oauth_app
my_gitapp  <- oauth("github", "4f7e67ea88fee9456886", "cdcae327f94916cfbbea9d85d4b218121ddf74ac")
my_gitapp  <- oauth_app("github", "4f7e67ea88fee9456886", "cdcae327f94916cfbbea9d85d4b218121ddf74ac")
my_gitapp
?oauth2.0_token
git_token <- oauth2.0_token(oauth_endpoints("github"), my_gitapp)
2
gtoken <- config(token = git_token)
git_token <- oauth2.0_token(oauth_endpoints("github"), my_gitapp)
install.packages("httpuv")
git_token <- oauth2.0_token(oauth_endpoints("github"), my_gitapp)
git_token <- oauth2.0_token(oauth_endpoints("github"), my_gitapp)
library("httpuv")
library(httr)
oauth_endpoints("github")
my_gitapp  <- oauth_app("github", "4f7e67ea88fee9456886", "cdcae327f94916cfbbea9d85d4b218121ddf74ac")
git_token <- oauth2.0_token(oauth_endpoints("github"), my_gitapp)
library(httr)
oauth_endpoints("github")
my_gitapp  <- oauth_app("github", "4f7e67ea88fee9456886", "cdcae327f94916cfbbea9d85d4b218121ddf74ac")
git_token <- oauth2.0_token(oauth_endpoints("github"), my_gitapp)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications;
#    Use any URL you would like for the homepage URL (http://github.com is fine)
#    and http://localhost:1410 as the callback url
#
#    Insert your client ID and secret below - if secret is omitted, it will
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
myapp <- oauth_app("github", "56b637a5baffac62cad9")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
oauth_endpoints("github")
my_gitapp  <- oauth_app("github", "0e7768c0056d4abbfc57", "66f6632e0a83a26331e66e27ab285fe6e1de4e52")
git_token <- oauth2.0_token(oauth_endpoints("github"), my_gitapp)
library(httr)
oauth_endpoints("github")
my_gitapp  <- oauth_app("github", "0e7768c0056d4abbfc57", "66f6632e0a83a26331e66e27ab285fe6e1de4e52")
my_gitapp
git_token <- oauth2.0_token(oauth_endpoints("github"), my_gitapp)
library(httr)
oauth_endpoints("github")
my_gitapp  <- oauth_app("github", "20dab3449afcd4ef1741", "90a498d941f726087a1f3809c5b2efc85d4682ec")
git_token <- oauth2.0_token(oauth_endpoints("github"), my_gitapp)
gtoken <- config(token = git_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
str(reg)
str(req)
names(req)
dim(req$date)
length(req$date)
req$date
req$times
req$content
names(req)
req$times
req$url
req$status_code
req$headers
names(req)
req$all_headers
names(req)
req$cookies
ls(req$cookies)
class(req$cookies)
req$cookies[1]
req$cookies[2]
req$cookies[3]
req$cookies[4]
names(req)
req$times
req$request
clean <- fromJSON(toJSON(req))
install.packages("rjson")
library(rjson)
clean <- fromJSON(toJSON(req))
install.packages("jsonlite")
library(httr)
library(jsonlite)
#call back when creating the app was http://localhost:1410
oauth_endpoints("github")
my_gitapp  <- oauth_app("github", "20dab3449afcd4ef1741", "90a498d941f726087a1f3809c5b2efc85d4682ec")
git_token <- oauth2.0_token(oauth_endpoints("github"), my_gitapp)
gtoken <- config(token = git_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
response <- content(req)
response
clean <- fromJSON(toJSON(response))
clean
head(clean)
names(clean)
clean$created_at
dates <- clean$created_at
dates
dates <- as.data.frame(clean$created_at)
dates
?as.data.frame
str(dates)
sort(dates)
dim(dates)
names(clean)
clean$releases_url
names(clean)
str(clean$pushed_at)
name(clean)
names(clean)
head(clean$archive_url)
names(clean)
clean$updated_at
names(clean)
dates <- c(clean$created_at, clean$updated_at)
head(dates)
dates <- cbind(clean$created_at, clean$updated_at)
head(dates)
names(clean)
clean$homepage
names(clean)
head(clean)
dim(clean)
class(clean)
x <- clean[clean$url=="https://api.github.com/users/jtleek/repos",]
x
dim(clean)
dim(x)
x
rm(x)
x <- clean[clean$url=="https://api.github.com/users/jtleek/datasharing",]
x
dim(x)
rm(x)
names(clean)
head(clean)
x <- clean[clean$url=="https://api.github.com/repos/jtleek/datasharing",]
x
x$created_at
?GET
install.packages("sqldf")
library(sqldf)
getwd()
data <- read.csv("/getting_cleaning/survey_data.csv")
?read.csv
data <- read.csv("./getting_cleaning/survey_data.csv")
head(data)
dim(data)
acs <- read.csv("./getting_cleaning/survey_data.csv")
rm(data)
sqldf("select * from acs where AGEP < 50 and pwgtp1")
head(sqldf("select * from acs where AGEP < 50 and pwgtp1"))
head(acs$pwgtp1)
table(acs$pwgtp1)
complete.cases(pwgtp1)
complete.cases(acs$pwgtp1)
table(complete.cases(acs$pwgtp1))
sqldf("select * from acs where AGEP < 50")
sqldf("select pwgtp1 from acs where AGEP < 50")
dim(sqldf("select pwgtp1 from acs where AGEP < 50"))
dim(sqldf("select * from acs where AGEP < 50 and pwgtp1"))
dim(sqldf("select * from acs"))
dim(sqldf("select * from acs where AGEP < 50"))
dim(sqldf("select pwgtp1 from acs where AGEP < 50"))
dim(sqldf("select * from acs where AGEP < 50 and pwgtp1"))
dim(acs)
head(sqldf("select pwgtp1 from acs where AGEP < 50"))
reg <- unique(acs$AGEP)
reg
?match
?identical
v <- sqldf("select distinct AGEP from acs")
v
identical(reg, v)
head(reg)
head(v)
class(reg)
class(v)
?match
?identical
tail(reg)
tail(v)
read <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
read
library(XML)
url <- "http://biostat.jhsph.edu/~jleek/contact.html "
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url, useInternalNodes=TRUE)
htn
html
?readlines
html <- readLines(con)
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
html <- readLines(con)
html
close(con)
class(html)
dim(html)
?data.frame
answerdf <- html[c(10, 20, 30, 100)]
answerdf
?sapply
sapply(answerdf, nchar())
class(answerdf)
dim(answerdf)
sapply(answerdf, nchar
)
answer <- sapply(answerdf, nchar, USE.NAMES=FALSE)
answer
?read.fwf
path <- url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for ")
head(readLines(path))
data <- read.fwf(path, skip=4, widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
data
head(data)
head(data[,4])
sum(data[,4])
sum(data[,c(8,9)])
8 <- sum(data[,8])
eight <- sum(data[,8])
eight
nine <- sum(data[,9])
nine
head(data)
head(path)
head(readLines(path))
path
path <- url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for ")
path
head(readLines(path))
head(data)
sum(data[,c(6,7)])
seven <- sum(data[,7])
seven
six <- sum(data[,6])
six
sum(data[,4])
data <- read.fwf("./getting_cleaning/fixed_width.for", skip=4, widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
sum(data[,c(6,7)])
sum(data[,c(8,9)])
sum(data[,4])
sum(data[,4])
mtcars
head(mtcars)
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars=c("mpg","hp"))
library(reshape2)
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars=c("mpg","hp"))
head(carMelt)
tail(carMelt)
carMelt[carMelt$variable==hp,]
carMelt[carMelt$variable==carMelt$hp,]
names(carMelt)
carMelt[carMelt$carname=="Mazda RX4",]
dim(mtcars)
dim(carMelt)
cylData <- dcast(carMelt, cyl ~ variable)
cylData
rm(list=ls())
getwd()
ls()
list.files()
setwd("C:/Users/aidan/data_science/datasciencecoursera/getting_cleaning")
list.files()
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
setwd("C:/Users/aidan/data_science/datasciencecoursera")
data <- download.file(url, destfile="./getting_cleaning/q1.csv")
data
?download.file
download.file(url, destfile="./getting_cleaning/q1.csv")
data <- read.csv("q1.csv")
data <- read.csv("./getting_cleaning/q1.csv")
head(data)
names(data)
?read.csv
head(data, n=1)
names(data)
summarize(data$ACR)
summary(data$ACR)
summary(data$AGS)
data$agricultureLogical <- ifelse((data$ACR>2 & data$AGS>5), TRUE, FALSE)
head(data$agricultureLogical)
?ifelse
class(data$agricultureLogical)
which(agricultureLogical)
which(data#agricultureLogical)
==TRUE
)
x <- data[which(data$agricultureLogical==TRUE),]
x
head(x)
head(x, n=3)
which(data$agricultureLogical)
?use
data$new <- ifelse((data$ACR>2 & data$AGS>5), TRUE, FALSE)
agricultureLogical <- new
head(which(agricultureLogical), n=3)
agricultureLogical <- data$new
#answer to question 1
head(which(agricultureLogical), n=3)
library(jpeg)
install.packages("jpeg")
library(jpeg)
source <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg "
image_data <- readJPEG(source, native=TRUE)
source <- con("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
source <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
image_data <- readJPEG(source, native=TRUE)
?url
image_data <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native=TRUE)
source <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="/getting_cleaning/leek.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="./getting_cleaning/leek.jpg")
image_data <- readJPEG("./getting_cleaning/leek.jpg", native=TRUE)
rm(leek.jpg)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="./getting_cleaning/leek.jpg")
image_data <- readJPEG("./getting_cleaning/leek.jpg", native=TRUE)
head(image_data)
quantile(image_data, probs=c(0.3,0.8))
str(image_data)
hist(image_data)
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="./getting_cleaning/leek.jpg", mode="wb")
image_data <- readJPEG("./getting_cleaning/leek.jpg", native=TRUE)
quantile(image_data, probs=c(0.3,0.8))
A = matrix(1:10, nrow=5, ncol=2, byrow = TRUE)
quantile(A, probs=0.5)
hist(A)
A
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ", destfile="./getting_cleaning/gdp.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv ", destfile="./getting_cleaning/educ.csv")
gdp <- read.csv("./getting_cleaning/gdp.csv")
educ <- read.csv("./getting_cleaning/educ.csv")
names(gdp)
gdp
head(gdp, n=1)
head(educ)
head(gdp, n=3)
head(educ, n=3)
head(gdp)
head(gdp$X, n=10)
head(educ$CountryCode, n=10)
merge(gdp, educ, by.x="gdp$x", by.y="educ$CountryCode")
merge(gdp, educ, by.x="gdp$X", by.y="educ$CountryCode")
head(gdp[,1], n=10)
merge(gdp, educ, by.x=gdp[,1], by.y="educ$CountryCode")
head(gdp)
str(gdp)
str(educ)
head(gdp)
table(is.na(gdp$x.5))
gdp$x.5
tail(gdp)
str(gdp)
summary(gp)
summary(gdp)
dim(gdp)
?read.csv
merge(gdp, educ, by.x=gdp[,1], by.y="educ$CountryCode", all=FALSE)
dim(educ)
head(gdp)
head(gdp)
str(gdp)
head(gdp, n=10)
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",colClasses="character", blank.lines.skip=TRUE, skip=4)
head(gdp)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
head(gdp)
gdp$alpha
gdp[1,]
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",colClasses="character", blank.lines.skip=TRUE, skip=5)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
head(gdp)
classes(gdp)
str(gdp)
unique(gdp$alpha)
str(gdp)
summary(gdp)
gdp$rank
gdp$gdp_rank
gdp <- as.numeric(gdp[,c(2,4)])
gdp <- as.numeric(gdp[,c("gdp_rank","USD")])
class(gdp)
head(gdp)
tail(gdp)
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",", blank.lines.skip=TRUE, skip=10,nrows=389)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
head(gdp)
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",", blank.lines.skip=TRUE, skip=0,nrows=389)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
gdp <- as.numeric(gdp[,c("gdp_rank","USD")])
head(gdp)
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",", blank.lines.skip=TRUE, skip=5,nrows=389)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
head(gdp)
tail(gdp)
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",", blank.lines.skip=TRUE, skip=5,nrows=190)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
head(gdp)
tail(gdp)
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",nrows=190, blank.lines.skip=TRUE, skip=5,)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
head(gdp)
tail(gdp)
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",nrows=10, blank.lines.skip=TRUE, skip=5,)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
gdp
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",nrows=80, blank.lines.skip=TRUE, skip=5,)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
gdp
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",nrows=90, blank.lines.skip=TRUE, skip=5,)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
gdp
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",nrows=150, blank.lines.skip=TRUE, skip=5,)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
gdp
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",nrows=110, blank.lines.skip=TRUE, skip=5,)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
gdp
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",nrows=98, blank.lines.skip=TRUE, skip=5,)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
gdp
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",nrows=138, blank.lines.skip=TRUE, skip=5,)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
gdp
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",nrows=98, blank.lines.skip=TRUE, skip=5,)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
gdp
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",nrows=99, blank.lines.skip=TRUE, skip=5,)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
gdp
gdp[99,]
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",nrows=99, blank.lines.skip=TRUE, skip=5,)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
gdp
gdp <- read.table(file="./getting_cleaning/gdp.csv",sep=",",nrows=99, blank.lines.skip=TRUE, skip=5,)
gdp <- gdp[,c(1,2,4,5,6)]
names(gdp) <- c("country","gdp_rank","economy","USD","alpha")
gdp
