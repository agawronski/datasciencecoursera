code goes herere
n=5; T=1; r=0.05; sigma=.4;S=50;K=50
price=function(n){
u.n=exp(sigma*sqrt(T/n));
d.n=1/u.n
p.n=(exp(r*T/n)-d.n)/(u.n-d.n)
SJ=matrix(0,n+1,n+1)
SJ[1,1]=S
for(i in(2:(n+1)))
{for(j in(1:i)){SJ[i,j]=S*u.n^(i-j)*d.n^(j-1)}}
OPT=matrix(0,n+1,n+1)
OPT[n+1,]=(SJ[n+1,]-K)*(SJ[n+1,]>K)
for(i in(n:1))
{for(j in(1:i)){OPT[i,j]=exp(-r*T/n)*(OPT[i+1,j]*p.n+
(1-p.n)*OPT[i+1,j+1])}}
return(OPT[1,1])
}
N=10:400
V=Vectorize(price)(N)
plot(N,V,type="l")
V
print V
print()
help(print)
demo(print)
d1=1/(sigma*sqrt(T))*(log(S/K)+(r+sigma^2/2)*T)
d2=d1-sigma*sqrt(T)
BS=S*pnorm(d1)-K*exp(-r*T)*pnorm(d2)
abline(h=BS,lty=2,col="red")
clear
d1=1/(sigma*sqrt(T))*(log(S/K)+(r+sigma^2/2)*T)
d2=d1-sigma*sqrt(T)
BS=S*pnorm(d1)-K*exp(-r*T)*pnorm(d2)
abline(h=BS,lty=2,col="red")
price.american=function(n,opt="put"){
u.n=exp(sigma*sqrt(T/n)); d.n=1/u.n
p.n=(exp(r*T/n)-d.n)/(u.n-d.n)
SJ=matrix(0,n+1,n+1)
SJ[1,1]=S
for(i in(2:(n+1)))
{for(j in(1:i)) {SJ[i,j]=S*u.n^(i-j)*d.n^(j-1)}}
OPTe=matrix(0,n+1,n+1)
OPTa=matrix(0,n+1,n+1)
if(opt=="call"){
OPTa[n+1,]=(SJ[n+1,]-K)*(SJ[n+1,]>K)
OPTe[n+1,]=(SJ[n+1,]-K)*(SJ[n+1,]>K)
}
if(opt=="put"){
OPTa[n+1,]=(K-SJ[n+1,])*(SJ[n+1,]<K)
OPTe[n+1,]=(K-SJ[n+1,])*(SJ[n+1,]<K)
}
for(i in(n:1))
{
for(j in(1:i))
{if(opt=="call"){
OPTa[i,j]=max((SJ[i,j]-K)*(SJ[i,j]>K),
exp(-r*T/n)*(OPTa[i+1,j]*p.n+
(1-p.n)*OPTa[i+1,j+1]))}
if(opt=="put"){
OPTa[i,j]=max((K-SJ[i,j])*(K>SJ[i,j]),
exp(-r*T/n)*(OPTa[i+1,j]*p.n+
(1-p.n)*OPTa[i+1,j+1]))}
OPTe[i,j]=exp(-r*T/n)*(OPTe[i+1,j]*p.n+
(1-p.n)*OPTe[i+1,j+1])}}
priceop=c(OPTe[1,1],OPTa[1,1])
names(priceop)=c("E","A")
return(priceop)}
price.american=function(n,opt="put"){
u.n=exp(sigma*sqrt(T/n)); d.n=1/u.n
p.n=(exp(r*T/n)-d.n)/(u.n-d.n)
SJ=matrix(0,n+1,n+1)
SJ[1,1]=S
for(i in(2:(n+1)))
{for(j in(1:i)) {SJ[i,j]=S*u.n^(i-j)*d.n^(j-1)}}
OPTe=matrix(0,n+1,n+1)
OPTa=matrix(0,n+1,n+1)
if(opt=="call"){
OPTa[n+1,]=(SJ[n+1,]-K)*(SJ[n+1,]>K)
OPTe[n+1,]=(SJ[n+1,]-K)*(SJ[n+1,]>K)
}
if(opt=="put"){
OPTa[n+1,]=(K-SJ[n+1,])*(SJ[n+1,]<K)
OPTe[n+1,]=(K-SJ[n+1,])*(SJ[n+1,]<K)
}
for(i in(n:1))
{
for(j in(1:i))
{if(opt=="call"){
OPTa[i,j]=max((SJ[i,j]-K)*(SJ[i,j]>K),
exp(-r*T/n)*(OPTa[i+1,j]*p.n+
(1-p.n)*OPTa[i+1,j+1]))}
if(opt=="put"){
OPTa[i,j]=max((K-SJ[i,j])*(K>SJ[i,j]),
exp(-r*T/n)*(OPTa[i+1,j]*p.n+
(1-p.n)*OPTa[i+1,j+1]))}
OPTe[i,j]=exp(-r*T/n)*(OPTe[i+1,j]*p.n+
(1-p.n)*OPTe[i+1,j+1])}}
priceop=c(OPTe[1,1],OPTa[1,1])
names(priceop)=c("E","A")
return(priceop)}
d1=1/(sigma*sqrt(T))*(log(S/K)+(r+sigma^2/2)*T)
d2=d1-sigma*sqrt(T)
BS=-S*pnorm(-d1)+K*exp(-r*T)*pnorm(-d2)  )
find.packages("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
swirl()
library(swirl)
add2<-function(x,y) {
x + y
}
add2<-function(x,y) {
+   x + y
+ }
add2(3,5)
add2(7,9)
above<-function(x,n){
use<-x>n
x[use]
}
x<-1:20
above(x,11)
above(x,4)
columnmean<- function(y){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columnmeans(airquality)
airquality
columnmeans<- function(y){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columnmeans(airquality)
columnmeans<- function(y, removeNA=TRUE){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columnmeans(airquality)
columnmeans
columnmeans<- function(y, removeNA=TRUE){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
columnmeans(airquality)
columnmeans<- function(y, removeNA=TRUE){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i]) na.rm=removeNA
}
means
}
columnmeans<- function(y, removeNA=TRUE){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i]) na.rm=removeNA
}
means
}
columnmeans<- function(y, removeNA=TRUE){
nc<-ncol(y)
means<-numeric(nc)
for(i in 1:nc){
means[i]<-mean(y[,i], na.rm = removeNA)
}
means
}
columnmeans(airquality)
rm(list=ls())
install.packages("swirl")
library(swirl)
swirl()
rm(list=rm())
rm(list=rm())
rm(list=ls())
library(swirl)
swirl()
plot(child~parent,galton)
plot(jitter(child,4)~parent,galton)
f<-function(x,y){}
f<-function(x,y){
x^2+x/z
}
f(4,3)
z<-z
z<-t
f(5,4)
sys.time()
Sys.time()
?rnorm
b<-rnorm(10)
b
getwd()
?array
?rnorm
?array
?gl
?sapply
lapply
?lapply
?str
debug(lm)
lm(y~x)
?best
??best
pollutantmean<-function(directory, pollutant, id=1:332) {
all_files<-list.files("specdata", full.names=TRUE)
data<-data.frame()
for (i in 1:332){
data<-rbind(data, read.csv(all_files[i]))
}
if(pollutant=="sulfate") {
p_data<-data[,c("sulfate","ID")]
}
else if(pollutant=="nitrate"){
p_data<-data[,c("nitrate","ID")]
}
else(print("Which pollutant?"))
monitor<-p_data[p_data$ID==id,]
mean(monitor[,1], na.rm=TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
getwd()
setwd("C:/Users/NC/data_science/datasciencecoursera")
pollutantmean<-function(directory, pollutant, id=1:332) {
all_files<-list.files("specdata", full.names=TRUE)
data<-data.frame()
for (i in 1:332){
data<-rbind(data, read.csv(all_files[i]))
}
if(pollutant=="sulfate") {
p_data<-data[,c("sulfate","ID")]
}
else if(pollutant=="nitrate"){
p_data<-data[,c("nitrate","ID")]
}
else(print("Which pollutant?"))
monitor<-p_data[p_data$ID==id,]
mean(monitor[,1], na.rm=TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
?above
pollutantmean("specdata", "nitrate", 70:72)
rm(list=Ls())
rm(list=ls())
all_files<-list.files("specdata", full.names=TRUE)
all_files
dim(all_files)
class(all_files)
length(all_files)
data<-data.frame()
for (i in 1:332){
data<-rbind(data, read.csv(all_files[i]))
}
head(data)
class(data)
dim(data)
p_data<-data[,c("sulfate","ID")]
str(p_data)
monitor<-p_data[p_data$ID==id,]
monitor<-p_data[p_data$ID==23,]
mean(monitor[,1], na.rm=TRUE)
monitor<-p_data[p_data$ID==1:10,]
?subset
names(p_data)
monitor<-subset(p_data, ID==id, "sulfate")
rm(list=ls())
getwd()
setwd("C:/Users/NC/data_science/datasciencecoursera")
pollutantmean<-function(directory, pollutant, id=1:332) {
all_files<-list.files("specdata", full.names=TRUE)
data<-data.frame()
for (i in 1:33){
data<-rbind(data, read.csv(all_files[i]))
}
if(pollutant=="sulfate") {
p_data<-data[,c("sulfate","ID")]
monitor<-subset(p_data,ID==id,"sulfate")
}
else if(pollutant=="nitrate"){
p_data<-data[,c("nitrate","ID")]
monitor<-subset(p_data,ID==id,"nitrate")
}
else(print("Which pollutant?"))
mean(monitor[,1], na.rm=TRUE)
}
rm(list=ls())
getwd()
setwd("C:/Users/NC/data_science/datasciencecoursera")
pollutantmean<-function(directory, pollutant, id=1:332) {
all_files<-list.files("specdata", full.names=TRUE)
data<-data.frame()
for (i in 1:33){
data<-rbind(data, read.csv(all_files[i]))
}
if(pollutant=="sulfate") {
p_data<-data[,c("sulfate","ID")]
monitor<-subset(p_data,ID==id,"sulfate")
}
else if(pollutant=="nitrate"){
p_data<-data[,c("nitrate","ID")]
monitor<-subset(p_data,ID==id,"nitrate")
}
else(print("Which pollutant?"))
mean(monitor[,1], na.rm=TRUE)
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
?%in%
?which
y <- 10
f1 <- function(x) {
function() {
x + 10
}
}
f1(1)()
f1(2)()
rm(list=ls())
getwd()
setwd("C:/Users/NC/data_science/datasciencecoursera")
list.files("specdata")
check<-read.csv("specdata/001.csv")
head(check)
check2<-read.csv("specdata/002.csv")
head(check2)
length(check$ID)
all_files<-list.files("specdata", full.names=TRUE)
all_files
data<-data.frame()
for (i in 1:33){
data<-rbind(data, read.csv(all_files[i]))
}
head(data)
mean(data$sulfate, na.rm=TRUE)
pollutantmean<-function(directory, pollutant, id=1:33){
all_files<-list.files("specdata", full.names=TRUE)
data<-data.frame()
for (i in 1:33){
data<-rbind(data, read.csv(all_files[i]))
}
monitor<-data[data$ID==id,]
mean(monitor[monitor$])
}
rm(list=ls())
getwd()
setwd("C:/Users/NC/data_science/datasciencecoursera")
list.files("specdata")
check<-read.csv("specdata/001.csv")
head(check)
check2<-read.csv("specdata/002.csv")
head(check2)
length(check$ID)
all_files<-list.files("specdata", full.names=TRUE)
all_files
data<-data.frame()
for (i in 1:33){
data<-rbind(data, read.csv(all_files[i]))
}
head(data)
mean(data$sulfate, na.rm=TRUE)
pollutantmean<-function(directory, pollutant, id=1:33){
all_files<-list.files("specdata", full.names=TRUE)
data<-data.frame()
for (i in 1:33){
data<-rbind(data, read.csv(all_files[i]))
}
monitor<-data[data$ID==id,]
}
data<-data.frame()
rm(list=ls())
getwd()
setwd("C:/Users/NC/data_science/datasciencecoursera")
pollutantmean<-function(directory, pollutant, id=1:332) {
all_files<-list.files("specdata", full.names=TRUE)
data<-data.frame()
for (i in 1:id){
data<-rbind(data, read.csv(all_files[i]))
}
if(pollutant=="sulfate") {
p_data<-data[,c("sulfate","ID")]
}
else if(pollutant=="nitrate"){
p_data<-data[,c("nitrate","ID")]
}
else(print("Which pollutant?"))
mean(p_data[,1], na.rm=TRUE)
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
rm(list=ls())
getwd()
setwd("C:/Users/NC/data_science/datasciencecoursera")
pollutantmean<-function(directory, pollutant, id=1:332) {
all_files<-list.files("specdata", full.names=TRUE)
data<-data.frame()
for (i in id){
data<-rbind(data, read.csv(all_files[i]))
}
if(pollutant=="sulfate") {
p_data<-data[,c("sulfate","ID")]
}
else if(pollutant=="nitrate"){
p_data<-data[,c("nitrate","ID")]
}
else(print("Which pollutant?"))
mean(p_data[,1], na.rm=TRUE)
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
