cov_xy
cov_xy <- (sum((vals-EX)*(vals-EY)))/2
cov_xy
cov_xy <- (sum((vals-EX)*(vals-EY)))/5
cov_xy
joint
vals%*%vals
class(vals)
vals <- as.vector(vals)
class(vals)
?as.vector
vals
t(vals)
t(t(vals))
vals
t(t(vals))
vals*t(vals)
dim(vals)
vals <- as.matrix(vals)
vals
t(vals)
vals*t(vals)
vals%*%t(vals)
all <-vals%*%vals
all <-vals%*%t(vals)
all <-as.vector(vals%*%t(vals))
all
joint
probs <- as.vector(joint)
probs
cov_xy <- sum(all*probs) - EX*EY
cov_xy
sdx <- sqrt(varX)
sdy <- sqrt(varY)
cor_xy <- cov_xy/(sdx*sdy)
cor_xy
class(marX)
marX <- as.matrix(marX)
marX
marY <- as.matrix(marY)
marY
ind <- marX%*%marY
ind <- marX%*%t(marY)
ind
qnorm(0.01, 0.04, 0.09)
mu <- 0.04*12
var <- (0.09)^sqrt(12)
qnorm(0.01, mu, sqrt(var))
var <- (0.09)^2*sqrt(12)
qnorm(0.01, mu, sqrt(var))
sd <- (0.09)*sqrt(12)
qnorm(0.01, mu, sqrt(var))
qnorm(0.01, mu, sqrt(var))*100000
qnorm(0.05, mu, sqrt(var))*100000
(exp(qnorm(0.01, mu, sqrt(var)))-1)*100000
(exp(qnorm(0.05, mu, sqrt(var)))-1)*100000
(exp(qnorm(0.01, mu, sd)-1)*100000
(exp(qnorm(0.05, mu, sd)-1)*100000
))]
(exp(qnorm(0.01, mu, sd)-1))*100000
(exp(qnorm(0.05, mu, sd)-1))*100000
mu <- 0.04*12
sd <- (0.09)*sqrt(12)
mu
sd
qnorm(0.01, mu, sd)
qnorm(0.05, mu, sd)
mu <- exp(0.04*12)-1
sd <- exp((0.09)*sqrt(12))-1
mu
sd
qnorm(0.01, mu, sd)
qnorm(0.05, mu, sd)
?qnorm
qnorm(0.01, mu, sd)*100000
qnorm(0.05, mu, sd)*100000
mu <- 0.04*12
sd <- (0.09)*sqrt(12)
mu
sd
qnorm(0.01, mu, sd, log.p=TRUE)
qnorm(p=0.01, mean=mu, sd=sd, lower.tail=TRUE, log.p=TRUE)
qnorm(p=0.01, mean=mu, sd=sd)
qnorm(0.05, mu, sd)
qnorm(0.01, mu, sd)
qnorm(0.05, mu, sd)
exp(qnorm(0.01, mu, sd))-1
exp(qnorm(0.05, mu, sd))-1
(exp(qnorm(0.01, mu, sd))-1)*100000
(exp(qnorm(0.05, mu, sd))-1)*100000
a <- 0.01
b <- 0.04
c <- 0.02
(a+b+c)/3
varA <- 0.1
varB <- 0.15
varC <- 0.08
covAB <- 0.3
covAc <- 0.1
covBC <- -0.2
varP <- (1/3)^2*a + (1/3)^2*b + (1/3)^2*c + 2*a*b*c*covAB*covAC*covBC
covAC <- 0.1
covBC <- -0.2
varP <- (1/3)^2*a + (1/3)^2*b + (1/3)^2*c + 2*a*b*c*covAB*covAC*covBC
varP
varP <- (1/3)^2*a + (1/3)^2*b + (1/3)^2*c + 2*(1/3)*(1/3)*(1/3)*covAB*covAC*covBC
varP
?pmvnorm
varP <- (1/3)^2*varA + (1/3)^2*varB + (1/3)^2*varC
+ 2*(1/3)*(1/3)*(1/3)*covAB*covAC*covBC
varP <- (1/3)^2*varA + (1/3)^2*varB + (1/3)^2*varC + 2*(1/3)*(1/3)*(1/3)*covAB*covAC*covBC
varP
w <- 1/3
##Next thing
a <- 0.01
b <- 0.04
c <- 0.02
w <- 1/3
varA <- 0.1
varB <- 0.15
varC <- 0.08
covAB <- 0.3
covAC <- 0.1
covBC <- -0.2
varP <- (w^2)*varA + (w^2)*varB + (w^2)*varC +
2*w*w*w*covAB*covAC*covBC
varP
varP <- (w^2)*varA + (w^2)*varB + (w^2)*varC +
2*w*w*covAB + 2*w*w*covAC + 2*w*w*covBC
varP
library(ggplot2)
dataset(mpg)
data(mpg)
mpg
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("smooth"))
qplot(displ, hwy, data=mpg, color=drv, geom=c("points"))
qplot(displ, hwy, data=mpg, color=drv, geom=c("point"))
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point"))
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(hwy, data=mpg)
qplot(hwy, data=mpg, fill=drv)
qplot(hwy, data=mpg, facets= drv ~., binwidth=2)
str(mpg)
qplot(hwy, model, data=mpg)
qplot(hwy, cyl, data=mpg)
qplot(hwy, class, data=mpg)
qplot(hwy, drv, data=mpg)
qplot(hwy, drv, data=mpg, facets=.~cyl)
qplot(hwy, drv, data=mpg)
qplot(hwy, drv, data=mpg, facets=cyl~.)
qplot(cty, data=mpg)
qplot(cty, data=mpg, fill=year)
qplot(cty, data=mpg, fill=model)
qplot(cty, data=mpg, fill=fl)
qplot(cty, data=mpg, fill=drv)
qplot(cty, data=mpg, fill=trans)
qplot(cty, year, data=mpg, fill=trans)
qplot(cty, year, data=mpg, facets=.~drv)
qplot(cty, year, data=mpg, facets=.~drv, geom=c("point", "smooth"))
qplot(cty, year, data=mpg, fill=trans)
qplot(cty, data=mpg, fill=drv)
qplot(cty, data=mpg, fill=drv, geom="density")
qplot(cty, data=mpg, color=drv, geom="density")
qplot(cty, data=mpg, color=drv, geom="density", fill=drv)
qplot(cty, data=mpg, color=drv, geom="density", fill=fl)
qplot(cty, data=mpg, color=drv, geom="density")
qplot(cty,drv, data=mpg)
qplot(cty,drv, data=mpg, color=fl)
qplot(cty,drv, data=mpg, color=fl, cex=3)
qplot(cty,drv, data=mpg, color=fl, cex=5)
qplot(cty,drv, data=mpg, color=fl, cex=5, bty="n")
qplot(cty,drv, data=mpg, color=fl, cex=5)
qplot(cty,drv, data=mpg, color=fl, cex=5, geom=c("point", "smooth"))
qplot(cty,drv, data=mpg, cex=5, geom=c("point", "smooth"))
qplot(cty,drv, data=mpg, cex=5, geom=c("point", "smooth"), method="lm")
qplot(cty,drv, data=mpg, cex=5)
qplot(cty, data=mpg, color=drv, geom="density", fill=fl)
qplot(cty, data=mpg, color=drv, geom="density", fill=drv)
qplot(cty, data=mpg, color=drv, geom="density")
qplot(cty, data=mpg, color=drv)
+geom="density"
+ (geom="density")
geom
ggplot2(cty, data=mpg, color=drv)
library(ggplot2)
ggplot2(cty, data=mpg, color=drv)
ggplot(cty, data=mpg, color=drv)
g <- ggplot(cty, data=mpg, color=drv)
g <- ggplot(mpg, aes(city, drv))
g
summary(g)
g + geom_point()
g <- ggplot(mpg, aes(cty, drv))
g + geom_point()
g + geom_smooth()
str(mpg)
g <- ggplot(mpg, aes(cty, hwy))
g + geom_point()
+geom_smooth()
g + geom_smooth()
g + geom_smooth() + geom_point()
g + geom_point() + facet_grid(.~drv)
g <- g + geom_point()
g
g + facet_grid(.~drv)
g + facet_grid(.~drv) + geom_smooth()
g + facet_grid(.~drv) + geom_smooth() + xlab("City Miles")
g + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles")
g + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title")
g + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position=top)
g + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top")
g + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point()
g + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(color="steelblue")
g + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(color="steelblue", size=4)
g + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(color="steelblue", size=4, alpha=1/2)
g + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(color="steelblue", size=4, alpha=1/4)
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(color="steelblue", size=4, alpha=1/4)
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(color="steelblue", size=4, alpha=1/2)
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(color="steelblue", size=4, alpha=2/3)
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(color="steelblue", size=4, alpha=0.1)
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(color=drv, size=4, alpha=2/3)
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(aes(color=drv), size=4, alpha=2/3)
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(aes(color=fl), size=4, alpha=2/3)
str(mpg)
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(aes(color=class), size=4, alpha=2/3)
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(aes(color=class), size=4, alpha=1/2)
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(aes(color=class), size=4, alpha=.4)
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(aes(color=class), size=4, alpha=.4) + theme(legend.position="none")
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(aes(color=class), size=4, alpha=.4) + theme(legend.position="none") geom_line()
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(aes(color=class), size=4, alpha=.4) + theme(legend.position="none") + geom_line()
ggplot(mpg, aes(cty, hwy)) + facet_grid(.~drv) + geom_smooth() + xlab("City Miles") + ylab("Highway Miles") + ggtitle("Cool Title") + theme(legend.position="top") + geom_point(aes(color=class), size=4, alpha=.4) + theme(legend.position="none") + geom_line(aes(color=class), alpha=0.4)
?ARIMAacf
library(stats)
?ARIMAacf
?ARMAacf
?act
?acf
?readRDS
raw_input()
data_input()
x <- c(1.05,1.21)
y1 <- c(2010,2012)
y2 <- c(1,2)
predict <- lm(y ~ x1)
y <- c(1.05,1.21)
x1 <- c(2010,2012)
x2 <- c(1,2)
predict <- lm(y ~ x1)
summary(predict)
2014*0.08
plot(x1, y)
?predict
input <- 2014
predict(predict, input)
y <- c(1.05,1.21)
x1 <- c(2010,2012)
predict <- lm(y ~ x1)
summary(predict)
-159.75 + (0.08*2010)
-159.75 + (0.08*2012)
-159.75 + (0.08*2014)
x2 <- c(1,2)
predict <- lm(y ~ x2)
summary(predict)
0.89*1
0.89 + (0.16*1)
0.89 + (0.16*2)
0.89 + (0.16*3)
library(fortunes)
install.packages("fortunes")
library(forutnes)
library(fortunes)
fortune()
browser()
fortune()
fortune()
fortune("strait")
fortune("a")
fortune("a")
fortune()
fortune()
library(tseries)
?get.hist.quote
?start
?index
?as.yearmon
?diff
?log
?portfolio.optim
?returns
library(PerformanceAnalytics)
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
?diff
?lag
?chart.CumReturns
?coredata
args(apply)
?table(stats)
?table.Stats
?adjust_color
?pairs
?nrow
?var
?t.test
?cor.test
?jarque.bera.test
library(tseries)
?jarque.bera.test
library(boot)
?boot
?plot
?load
globalMin.portfolio
?globalMin.portfolio
library(portfolio.r)
install.packages(portfolio.r)
install.packages("portfolio.r")
library(portfolio.r)
globalMin.portfolio
.4^2
.6^2
.16*3
.36*2.5
.9*2
1.8+.9+.48
.48+.9
pvar <- w*3 + (1-w)*2.5 + 2*w*(1-w)*0.9
w <- 0.384
pvar <- w*3 + (1-w)*2.5 + 2*w*(1-w)*0.9
pvar
w <- 0.605
pvar <- w*3 + (1-w)*2.5 + 2*w*(1-w)*0.9
pvar
w <- 0.432
pvar <- w*3 + (1-w)*2.5 + 2*w*(1-w)*0.9
pvar
w <- 0.551
pvar <- w*3 + (1-w)*2.5 + 2*w*(1-w)*0.9
pvar
w <- 0.384
pvar <- w*3 + (1-w)*2.5 + 2*w*(1-w)*0.9
pvar
pr <- w*2 + (1-w)*1
pr
w <- c(0.384, 0.605, 0.432, 0.551)
pvar <- w*3 + (1-w)*2.5 + 2*w*(1-w)*0.9
pvar
pr <- w*2 + (1-w)*1
pr
.4*2 + .6
(.4^2)*3 +(0.6^2)*2.5 + 2*(0.4)*(0.6)*(0.9)
w <- c(0.384, 0.605, 0.432, 0.551)
pvar <- (w^2)*3 + ((1-w)^2)*2.5 + 2*w*(1-w)*0.9
pvar
pr <- w*2 + (1-w)*1
pr
(109.04-105.06)/105.06
ve2 <- 29.49
(ve2-ve1)/ve1
ve1 <-28.64
ve2 <- 29.49
(ve2-ve1)/ve1
(ve2-ve1)/ve1
rf <- (vf2-vf1)/vf1
vf1 <- 105.06
vf2 <- 109.04
rf <- (vf2-vf1)/vf1
ve1 <-28.64
ve2 <- 29.49
vf1 <- 105.06
vf2 <- 109.04
Rf <- (vf2-vf1)/vf1
ve1 <-28.64
ve2 <- 29.49
Re <- (ve2-ve1)/ve1
RF
Rf
Re
rf <- log(1+Rf)
re <- log(1+Re)
rf
re
annual_Rf <- exp(12*rf)-1
annual_Rf
annual_Re <- exp(12*re)-1
annual_Re
annual_rf <- 12*rf
annual_re <- 12*re
annual_rf
annual_re
10000*Rf
10000*(1+Rf)
10000*(1+annual_Rf)
10000*(1+annual_Re)
0.2*Rf + 0.8*Re
pR <- 0.2*Rf + 0.8*Re
pr <- log(1+pR)
pr
muf - 1.645*sdf
muf <- 0.001
sdf <- 0.05
muf - 1.645*sdf
VaRf <- 100000*(muf - 1.645*sdf)
VaRf
mue <- 0.01
sde <- 0.09
VaRe <- 100000*(mue - 1.645*sde)
VaRe
muf <- 0.001
sdf <- 0.05
VaRf <- 100000*(exp(muf - 1.645*sdf)-1)
VaRf
VaRe <- 100000*(exp(mue - 1.645*sde)-1)
VaRe
VaRf <- 100000*(exp(12*muf - 1.645*(sdf*sqrt(12))))-1)
VaRf <- 100000*(exp(12*muf - 1.645*(sdf*sqrt(12)))-1)
VaRf
VaRe <- 100000*(exp(12*mue - 1.645*(sde*sqrt(12)))-1)
VaRe
3/(1-0.45)
3/(1-(1.5^2))
3/(1-((1.5^2)^2))
(1.5^2)
(1.5^2)/(1-(0.45^2))
(1.5^2)/(1-(0.45^2))*45 #Covariance
(1.5^2)/(1-(0.45^2))*.45 #Covariance
avpacx_mu <- 0.43*12
avpacx_mu
avpacx_sd <- 5.59*sqrt(12)
avpacx_sd
at_bills <- 0.08*12
avpacx_sr <- (avpacx_mu - at_bills)/avpacx_sd
avpacx_sr
avbltx_mu <- 0.49*12
avbltx_mu
avbltx_mu
avbltx_sd <- 2.9*sqrt(12)
avbltx_sd
avbltx_sr <- (avbltx_mu - at_bills)/avbltx_sd
avbltx_sr
aveiex_mu <- 1.28*12
aveiex_mu
aveiex_sd <- 8.45*sqrt(12)
aveiex_sd
aveiex_sr <- (aveiex_mu - at_bills)/aveiex_sd
aveiex_sr
library(portfolio.r)
library(PerformaceAnalytics)
library(PerformanceAnalytics)
?portfolio.optim
library(tseries)
?portfolio.optim
install.packages("portfolio.r")
source("portfolio.r")
source("portfolio.r")
getwd()
setwd("C:/Users/aidan/data_science/datasciencecoursera/finance")
source("portfolio.r")
mu <- c(0.43, 0.49, 1.28)
mu <- c(0.43, 0.49, 1.28)
a <- c(0.45, 0.28, 0.27)
b <- c(-0.22, 1.71, -0.49)
c <- c(0.33, 0.33, 0.33)
d <- c(-0.74, 1.15, 0.58)
mu*a
sum(mu*a)
sum(mu*b)
sum(mu*c)
sum(mu*d)
t_weights <- c(-1.97, 1.51, 1.45)
t_mu <- sum(mu*t_weights)
t_mu
t_mu <- 1.76
t_bills <- 0.08
0.5*t_bills
0.5*t_bills + 0.5*t_mu
0.44*t_bills + 0.56*t_mu
0.55*t_bills + 0.45*t_mu
0.44*t_mu + 0.56*t_bills
0.55*t_mu + 0.45*t_bills
0.62*t_mu + 0.38*t_bills
(0.55)^2*(0.0563)
(0.55^2)*(0.0563^2)
(0.55^2)*(5.63^2)
(5.63^2)
(0.55^2)*(5.63^2)
efficient_sd <- sqrt((0.55^2)*(5.63^2))
efficient_sd
gmvp_weights <- c(0.23, 0.87, -0.1)
gmvp_mu <- 0.4
gmvp_mu <- 0.4 # 0.4%
gmvp_sd <- 2.84 # 2.84%
gmvp_mu - (1.645*gmvp_sd)
gmvp_mu - (1.645*gmvp_sd)
gmvp_mu <- 0.004 # 0.4%
gmvp_sd <- 0.0284 # 2.84%
gmvp_mu - (1.645*gmvp_sd)
exp(gmvp_mu - (1.645*gmvp_sd)) - 1
VaR <- 100000*(exp(gmvp_mu - (1.645*gmvp_sd)) - 1)
VaR
1-0.732
(1.00139-1)/0.08194
1.00139- 0.08194
1.5262-(1.645*0.1214)
1.5262-(3*0.1214)
